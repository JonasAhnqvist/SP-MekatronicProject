

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Sep 27 16:48:06 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     _ADCON0	set	4034
    31  0000                     _ADCON0bits	set	4034
    32  0000                     _ADCON1	set	4033
    33  0000                     _ADCON2	set	4032
    34  0000                     _ADRESH	set	4036
    35  0000                     _ADRESL	set	4035
    36  0000                     _ANSELA	set	3896
    37  0000                     _ANSELB	set	3897
    38  0000                     _ANSELC	set	3898
    39  0000                     _CCP5CON	set	3924
    40  0000                     _CCPR5L	set	3925
    41  0000                     _CCPTMRS1	set	3912
    42  0000                     _INTCON	set	4082
    43  0000                     _IPR1	set	3999
    44  0000                     _LATBbits	set	3978
    45  0000                     _LATCbits	set	3979
    46  0000                     _PIE1	set	3997
    47  0000                     _PIE1bits	set	3997
    48  0000                     _PIR1bits	set	3998
    49  0000                     _PORTBbits	set	3969
    50  0000                     _PORTCbits	set	3970
    51  0000                     _PR2	set	4027
    52  0000                     _T1CON	set	4045
    53  0000                     _T2CON	set	4026
    54  0000                     _TMR1H	set	4047
    55  0000                     _TMR1L	set	4046
    56  0000                     _TRISA	set	3986
    57  0000                     _TRISAbits	set	3986
    58  0000                     _TRISB	set	3987
    59  0000                     _TRISC	set	3988
    60                           
    61                           	psect	smallconst
    62  000600                     __psmallconst:
    63                           	opt stack 0
    64  000600  00                 	db	0
    65  000601                     __stringdata:
    66                           	opt stack 0
    67  000601                     STR_6:
    68  000601  20                 	db	32
    69  000602  72                 	db	114	;'r'
    70  000603  3A                 	db	58	;':'
    71  000604  20                 	db	32
    72  000605  20                 	db	32
    73  000606  20                 	db	32
    74  000607  25                 	db	37
    75  000608  20                 	db	32
    76  000609  20                 	db	32
    77  00060A  20                 	db	32
    78  00060B  20                 	db	32
    79  00060C  20                 	db	32
    80  00060D  20                 	db	32
    81  00060E  20                 	db	32
    82  00060F  20                 	db	32
    83  000610  20                 	db	32
    84  000611  00                 	db	0
    85  000612                     STR_5:
    86  000612  62                 	db	98	;'b'
    87  000613  20                 	db	32
    88  000614  72                 	db	114	;'r'
    89  000615  3A                 	db	58	;':'
    90  000616  20                 	db	32
    91  000617  20                 	db	32
    92  000618  25                 	db	37
    93  000619  20                 	db	32
    94  00061A  30                 	db	48	;'0'
    95  00061B  30                 	db	48	;'0'
    96  00061C  3A                 	db	58	;':'
    97  00061D  30                 	db	48	;'0'
    98  00061E  30                 	db	48	;'0'
    99  00061F  3A                 	db	58	;':'
   100  000620  30                 	db	48	;'0'
   101  000621  30                 	db	48	;'0'
   102  000622  00                 	db	0
   103  000623                     __end_of__stringdata:
   104                           	opt stack 0
   105                           
   106                           ; #config settings
   107  000623  00                 	db	0	; dummy byte at the end
   108  0000                     
   109                           	psect	cinit
   110  001278                     __pcinit:
   111                           	opt stack 0
   112  001278                     start_initialization:
   113                           	opt stack 0
   114  001278                     __initialization:
   115                           	opt stack 0
   116                           
   117                           ; Clear objects allocated to COMRAM (9 bytes)
   118  001278  EE00  F04C         	lfsr	0,__pbssCOMRAM
   119  00127C  0E09               	movlw	9
   120  00127E                     clear_0:
   121  00127E  6AEE               	clrf	postinc0,c
   122  001280  06E8               	decf	wreg,f,c
   123  001282  E1FD               	bnz	clear_0
   124  001284                     end_of_initialization:
   125                           	opt stack 0
   126  001284                     __end_of__initialization:
   127                           	opt stack 0
   128  001284  0E00               	movlw	low (__Lmediumconst shr (0+16))
   129  001286  6EF8               	movwf	tblptru,c
   130  001288  0100               	movlb	0
   131  00128A  EF12  F003         	goto	_main	;jump to C main() function
   132                           tblptru	equ	0xFF8
   133                           postinc0	equ	0xFEE
   134                           wreg	equ	0xFE8
   135                           
   136                           	psect	bssCOMRAM
   137  00004C                     __pbssCOMRAM:
   138                           	opt stack 0
   139  00004C                     _minuter:
   140                           	opt stack 0
   141  00004C                     	ds	2
   142  00004E                     _sekunder:
   143                           	opt stack 0
   144  00004E                     	ds	2
   145  000050                     _time_scaler:
   146                           	opt stack 0
   147  000050                     	ds	2
   148  000052                     _timmar:
   149                           	opt stack 0
   150  000052                     	ds	2
   151  000054                     _blink_battery:
   152                           	opt stack 0
   153  000054                     	ds	1
   154                           tblptru	equ	0xFF8
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	cstackCOMRAM
   159  000001                     __pcstackCOMRAM:
   160                           	opt stack 0
   161  000001                     ??_isr:
   162  000001                     
   163                           ; 0 bytes @ 0x0
   164  000001                     	ds	14
   165  00000F                     ?_AD_omv:
   166                           	opt stack 0
   167  00000F                     ?___awdiv:
   168                           	opt stack 0
   169  00000F                     ?___awmod:
   170                           	opt stack 0
   171  00000F                     ?___flpack:
   172                           	opt stack 0
   173  00000F                     lcd_write@c:
   174                           	opt stack 0
   175  00000F                     ___awdiv@dividend:
   176                           	opt stack 0
   177  00000F                     ___awmod@dividend:
   178                           	opt stack 0
   179  00000F                     ___flpack@arg:
   180                           	opt stack 0
   181                           
   182                           ; 4 bytes @ 0xE
   183  00000F                     	ds	1
   184  000010                     ??_lcd_clear:
   185  000010                     lcd_char@cgram_addr:
   186                           	opt stack 0
   187  000010                     lcd_goto@pos:
   188                           	opt stack 0
   189  000010                     lcd_cmd@command:
   190                           	opt stack 0
   191  000010                     lcd_writesc@s:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0xF
   195  000010                     	ds	1
   196  000011                     ??_AD_omv:
   197  000011                     create_char@i:
   198                           	opt stack 0
   199  000011                     ___awdiv@divisor:
   200                           	opt stack 0
   201  000011                     ___awmod@divisor:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x10
   205  000011                     	ds	1
   206  000012                     ??_lcd_init:
   207  000012                     
   208                           ; 0 bytes @ 0x11
   209  000012                     	ds	1
   210  000013                     ___awdiv@counter:
   211                           	opt stack 0
   212  000013                     ___awmod@counter:
   213                           	opt stack 0
   214  000013                     ___flpack@exp:
   215                           	opt stack 0
   216  000013                     create_char@i_611:
   217                           	opt stack 0
   218  000013                     AD_omv@AD_value:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x12
   222  000013                     	ds	1
   223  000014                     ___awdiv@sign:
   224                           	opt stack 0
   225  000014                     ___awmod@sign:
   226                           	opt stack 0
   227  000014                     ___flpack@sign:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x13
   231  000014                     	ds	1
   232  000015                     ??___flpack:
   233  000015                     AD_omv@ADkanal:
   234                           	opt stack 0
   235  000015                     create_char@i_612:
   236                           	opt stack 0
   237  000015                     ___awdiv@quotient:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x14
   241  000015                     	ds	2
   242  000017                     printTime@minuter:
   243                           	opt stack 0
   244  000017                     create_char@i_613:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x16
   248  000017                     	ds	1
   249  000018                     printTime@timmar:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x17
   253  000018                     	ds	1
   254  000019                     ??_printTime:
   255  000019                     ?___lwtofl:
   256                           	opt stack 0
   257  000019                     ___lwtofl@c:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x18
   261  000019                     	ds	2
   262  00001B                     printTime@sekunder:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x1A
   266  00001B                     	ds	1
   267  00001C                     printTime@pos1:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x1B
   271  00001C                     	ds	1
   272  00001D                     ?___fldiv:
   273                           	opt stack 0
   274  00001D                     ___fldiv@f1:
   275                           	opt stack 0
   276                           
   277                           ; 4 bytes @ 0x1C
   278  00001D                     	ds	1
   279  00001E                     printTime@pos2:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x1D
   283  00001E                     	ds	2
   284  000020                     printTime@i:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x1F
   288  000020                     	ds	1
   289  000021                     ___fldiv@f2:
   290                           	opt stack 0
   291                           
   292                           ; 4 bytes @ 0x20
   293  000021                     	ds	1
   294  000022                     printTime@var:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x21
   298  000022                     	ds	3
   299  000025                     ??___fldiv:
   300                           
   301                           ; 0 bytes @ 0x24
   302  000025                     	ds	4
   303  000029                     ___fldiv@f3:
   304                           	opt stack 0
   305                           
   306                           ; 4 bytes @ 0x28
   307  000029                     	ds	4
   308  00002D                     ___fldiv@cntr:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x2C
   312  00002D                     	ds	1
   313  00002E                     ___fldiv@exp:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x2D
   317  00002E                     	ds	1
   318  00002F                     ___fldiv@sign:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x2E
   322  00002F                     	ds	1
   323  000030                     ?___fltol:
   324                           	opt stack 0
   325  000030                     ___fltol@f1:
   326                           	opt stack 0
   327                           
   328                           ; 4 bytes @ 0x2F
   329  000030                     	ds	4
   330  000034                     ??___fltol:
   331                           
   332                           ; 0 bytes @ 0x33
   333  000034                     	ds	4
   334  000038                     ___fltol@sign1:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x37
   338  000038                     	ds	1
   339  000039                     ___fltol@exp1:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x38
   343  000039                     	ds	1
   344  00003A                     ??_main:
   345                           
   346                           ; 0 bytes @ 0x39
   347  00003A                     	ds	4
   348  00003E                     main@character_code:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x3D
   352  00003E                     	ds	1
   353  00003F                     main@sensor_Val:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x3E
   357  00003F                     	ds	2
   358  000041                     main@duty_MSB:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x40
   362  000041                     	ds	1
   363  000042                     main@duty_LSB:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x41
   367  000042                     	ds	1
   368  000043                     main@rampknapp_flag:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x42
   372  000043                     	ds	1
   373  000044                     main@pot_Val:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x43
   377  000044                     	ds	2
   378  000046                     main@tid_old:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x45
   382  000046                     	ds	2
   383  000048                     main@set_Val:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x47
   387  000048                     	ds	1
   388  000049                     main@act_Val:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x48
   392  000049                     	ds	1
   393  00004A                     main@tid:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x49
   397  00004A                     	ds	2
   398                           tblptru	equ	0xFF8
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 41 in file "main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  ASCII_string    4    0        unsigned char [4]
   412 ;;  tid             2   73[COMRAM] unsigned int 
   413 ;;  tid_old         2   69[COMRAM] unsigned int 
   414 ;;  pot_Val         2   67[COMRAM] unsigned int 
   415 ;;  sensor_Val      2   62[COMRAM] unsigned int 
   416 ;;  act_Val         1   72[COMRAM] unsigned char 
   417 ;;  set_Val         1   71[COMRAM] unsigned char 
   418 ;;  rampknapp_fl    1   66[COMRAM] unsigned char 
   419 ;;  duty_LSB        1   65[COMRAM] unsigned char 
   420 ;;  duty_MSB        1   64[COMRAM] unsigned char 
   421 ;;  character_co    1   61[COMRAM] unsigned char 
   422 ;; Return value:  Size  Location     Type
   423 ;;		None               void
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   431 ;;      Params:         0       0       0       0       0       0       0
   432 ;;      Locals:        14       0       0       0       0       0       0
   433 ;;      Temps:          4       0       0       0       0       0       0
   434 ;;      Totals:        18       0       0       0       0       0       0
   435 ;;Total ram usage:       18 bytes
   436 ;; Hardware stack levels required when called:    4
   437 ;; This function calls:
   438 ;;		_AD_omv
   439 ;;		___awdiv
   440 ;;		___awmod
   441 ;;		___fldiv
   442 ;;		___fltol
   443 ;;		___lwtofl
   444 ;;		_create_char
   445 ;;		_init
   446 ;;		_lcd_goto
   447 ;;		_lcd_init
   448 ;;		_lcd_write
   449 ;;		_lcd_writesc
   450 ;;		_printTime
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457  000624                     __ptext0:
   458                           	opt stack 0
   459  000624                     _main:
   460                           	opt stack 27
   461                           
   462                           ;main.c: 44: char ASCII_string[4];
   463                           ;main.c: 45: unsigned char character_code=0;
   464                           
   465                           ;incstack = 0
   466  000624  0E00               	movlw	0
   467  000626  6E3E               	movwf	main@character_code,c
   468                           
   469                           ;main.c: 47: init();
   470  000628  ECB6  F008         	call	_init	;wreg free
   471                           
   472                           ;main.c: 48: lcd_init();
   473  00062C  EC7C  F007         	call	_lcd_init	;wreg free
   474                           
   475                           ;main.c: 49: create_char();
   476  000630  ECC3  F004         	call	_create_char	;wreg free
   477                           
   478                           ;main.c: 51: unsigned char duty_MSB, duty_LSB;
   479                           ;main.c: 52: unsigned int pot_Val;
   480                           ;main.c: 53: unsigned int sensor_Val;
   481                           ;main.c: 54: bool rampknapp_flag = 0;
   482  000634  0E00               	movlw	0
   483  000636  6E43               	movwf	main@rampknapp_flag,c
   484                           
   485                           ;main.c: 55: char set_Val;
   486                           ;main.c: 56: char act_Val;
   487                           ;main.c: 57: unsigned int tid = 0;
   488  000638  0E00               	movlw	0
   489  00063A  6E4B               	movwf	main@tid+1,c
   490  00063C  0E00               	movlw	0
   491  00063E  6E4A               	movwf	main@tid,c
   492                           
   493                           ;main.c: 58: unsigned int tid_old = 0;
   494  000640  0E00               	movlw	0
   495  000642  6E47               	movwf	main@tid_old+1,c
   496  000644  0E00               	movlw	0
   497  000646  6E46               	movwf	main@tid_old,c
   498  000648                     l1285:
   499                           
   500                           ;main.c: 62: {
   501                           ;main.c: 65: pot_Val = AD_omv(10);
   502  000648  0E0A               	movlw	10
   503  00064A  ECE2  F008         	call	_AD_omv
   504  00064E  C00F  F044         	movff	?_AD_omv,main@pot_Val
   505  000652  C010  F045         	movff	?_AD_omv+1,main@pot_Val+1
   506                           
   507                           ;main.c: 66: duty_MSB = pot_Val>>2;
   508  000656  C044  F03A         	movff	main@pot_Val,??_main
   509  00065A  C045  F03B         	movff	main@pot_Val+1,??_main+1
   510  00065E  90D8               	bcf	status,0,c
   511  000660  323B               	rrcf	??_main+1,f,c
   512  000662  323A               	rrcf	??_main,f,c
   513  000664  90D8               	bcf	status,0,c
   514  000666  323B               	rrcf	??_main+1,f,c
   515  000668  323A               	rrcf	??_main,f,c
   516  00066A  503A               	movf	??_main,w,c
   517  00066C  6E41               	movwf	main@duty_MSB,c
   518                           
   519                           ;main.c: 67: duty_LSB = pot_Val & 0x0003;
   520  00066E  5044               	movf	main@pot_Val,w,c
   521  000670  0B03               	andlw	3
   522  000672  6E42               	movwf	main@duty_LSB,c
   523                           
   524                           ;main.c: 68: CCPR5L = duty_MSB;
   525  000674  C041  FF55         	movff	main@duty_MSB,3925	;volatile
   526                           
   527                           ;main.c: 69: CCP5CON = (CCP5CON & 0b11001111)|(duty_LSB <<4);
   528  000678  C042  F03A         	movff	main@duty_LSB,??_main
   529  00067C  3A3A               	swapf	??_main,f,c
   530  00067E  0EF0               	movlw	240
   531  000680  163A               	andwf	??_main,f,c
   532  000682  010F               	movlb	15	; () banked
   533  000684  5154               	movf	84,w,b	;volatile
   534  000686  0BCF               	andlw	207
   535  000688  103A               	iorwf	??_main,w,c
   536  00068A  010F               	movlb	15	; () banked
   537  00068C  6F54               	movwf	84,b	;volatile
   538                           
   539                           ; BSR set to: 15
   540                           ;main.c: 70: sensor_Val = AD_omv(12);
   541  00068E  0E0C               	movlw	12
   542  000690  ECE2  F008         	call	_AD_omv
   543  000694  C00F  F03F         	movff	?_AD_omv,main@sensor_Val
   544  000698  C010  F040         	movff	?_AD_omv+1,main@sensor_Val+1
   545                           
   546                           ;main.c: 72: tid += 1;
   547                           
   548                           ;main.c: 71: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
   549  00069C  4A4A               	infsnz	main@tid,f,c
   550  00069E  2A4B               	incf	main@tid+1,f,c
   551                           
   552                           ;main.c: 77: if(PORTCbits.RC1 && tid >= (tid_old+50)) {
   553  0006A0  A282               	btfss	3970,1,c	;volatile
   554  0006A2  D025               	goto	l1321
   555  0006A4  0E32               	movlw	50
   556  0006A6  2446               	addwf	main@tid_old,w,c
   557  0006A8  6E3A               	movwf	??_main& (0+255),c
   558  0006AA  0E00               	movlw	0
   559  0006AC  2047               	addwfc	main@tid_old+1,w,c
   560  0006AE  6E3B               	movwf	(??_main+1)& (0+255),c
   561  0006B0  503A               	movf	??_main,w,c
   562  0006B2  5C4A               	subwf	main@tid,w,c
   563  0006B4  503B               	movf	??_main+1,w,c
   564  0006B6  584B               	subwfb	main@tid+1,w,c
   565  0006B8  A0D8               	btfss	status,0,c
   566  0006BA  D019               	goto	l1321
   567                           
   568                           ;main.c: 80: if(rampknapp_flag == 1){
   569  0006BC  0443               	decf	main@rampknapp_flag,w,c
   570  0006BE  A4D8               	btfss	status,2,c
   571  0006C0  D008               	goto	l91
   572                           
   573                           ;main.c: 81: lcd_goto(0x4F);
   574  0006C2  0E4F               	movlw	79
   575  0006C4  EC47  F009         	call	_lcd_goto
   576                           
   577                           ;main.c: 82: lcd_write(0x03);
   578  0006C8  0E03               	movlw	3
   579  0006CA  EC82  F008         	call	_lcd_write
   580                           
   581                           ;main.c: 83: rampknapp_flag = 0;
   582  0006CE  0E00               	movlw	0
   583  0006D0  D009               	goto	L1
   584  0006D2                     l91:
   585                           
   586                           ;main.c: 85: else if(rampknapp_flag == 0){
   587  0006D2  6643               	tstfsz	main@rampknapp_flag,c
   588  0006D4  D008               	goto	l1319
   589                           
   590                           ;main.c: 86: lcd_goto(0x4F);
   591  0006D6  0E4F               	movlw	79
   592  0006D8  EC47  F009         	call	_lcd_goto
   593                           
   594                           ;main.c: 87: lcd_write(0x20);
   595  0006DC  0E20               	movlw	32
   596  0006DE  EC82  F008         	call	_lcd_write
   597                           
   598                           ;main.c: 88: rampknapp_flag = 1;
   599  0006E2  0E01               	movlw	1
   600  0006E4                     L1:
   601  0006E4  6E43               	movwf	main@rampknapp_flag,c
   602  0006E6                     l1319:
   603                           
   604                           ;main.c: 89: }
   605                           ;main.c: 91: tid_old = tid;
   606  0006E6  C04A  F046         	movff	main@tid,main@tid_old
   607  0006EA  C04B  F047         	movff	main@tid+1,main@tid_old+1
   608  0006EE                     l1321:
   609                           
   610                           ;main.c: 92: }
   611                           ;main.c: 96: set_Val = (char)(pot_Val/10.23);
   612  0006EE  0E14               	movlw	20
   613  0006F0  6E21               	movwf	___fldiv@f2,c
   614  0006F2  0EAE               	movlw	174
   615  0006F4  6E22               	movwf	___fldiv@f2+1,c
   616  0006F6  0E23               	movlw	35
   617  0006F8  6E23               	movwf	___fldiv@f2+2,c
   618  0006FA  0E41               	movlw	65
   619  0006FC  6E24               	movwf	___fldiv@f2+3,c
   620  0006FE  C044  F019         	movff	main@pot_Val,___lwtofl@c
   621  000702  C045  F01A         	movff	main@pot_Val+1,___lwtofl@c+1
   622  000706  EC1A  F009         	call	___lwtofl	;wreg free
   623  00070A  C019  F01D         	movff	?___lwtofl,___fldiv@f1
   624  00070E  C01A  F01E         	movff	?___lwtofl+1,___fldiv@f1+1
   625  000712  C01B  F01F         	movff	?___lwtofl+2,___fldiv@f1+2
   626  000716  C01C  F020         	movff	?___lwtofl+3,___fldiv@f1+3
   627  00071A  ECF2  F005         	call	___fldiv	;wreg free
   628  00071E  C01D  F030         	movff	?___fldiv,___fltol@f1
   629  000722  C01E  F031         	movff	?___fldiv+1,___fltol@f1+1
   630  000726  C01F  F032         	movff	?___fldiv+2,___fltol@f1+2
   631  00072A  C020  F033         	movff	?___fldiv+3,___fltol@f1+3
   632  00072E  EC81  F006         	call	___fltol	;wreg free
   633  000732  C030  F03A         	movff	?___fltol,??_main
   634  000736  C031  F03B         	movff	?___fltol+1,??_main+1
   635  00073A  C032  F03C         	movff	?___fltol+2,??_main+2
   636  00073E  C033  F03D         	movff	?___fltol+3,??_main+3
   637  000742  503A               	movf	??_main,w,c
   638  000744  6E48               	movwf	main@set_Val,c
   639                           
   640                           ;main.c: 97: if(set_Val < 10) {
   641  000746  0E0A               	movlw	10
   642  000748  5C48               	subwf	main@set_Val,w,c
   643  00074A  B0D8               	btfsc	status,0,c
   644  00074C  D011               	goto	l1333
   645                           
   646                           ;main.c: 98: lcd_goto(0x04);
   647  00074E  0E04               	movlw	4
   648  000750  EC47  F009         	call	_lcd_goto
   649                           
   650                           ;main.c: 99: lcd_writesc(" ");
   651  000754  0E06               	movlw	high (STR_6+15)
   652  000756  6E11               	movwf	lcd_writesc@s+1,c
   653  000758  0E10               	movlw	low (STR_6+15)
   654  00075A  6E10               	movwf	lcd_writesc@s,c
   655  00075C  EC05  F009         	call	_lcd_writesc	;wreg free
   656                           
   657                           ;main.c: 100: lcd_goto(0x05);
   658  000760  0E05               	movlw	5
   659  000762  EC47  F009         	call	_lcd_goto
   660                           
   661                           ;main.c: 101: lcd_write(0x30+set_Val);
   662  000766  5048               	movf	main@set_Val,w,c
   663  000768  0F30               	addlw	48
   664  00076A  EC82  F008         	call	_lcd_write
   665                           
   666                           ;main.c: 102: }
   667  00076E  D02D               	goto	l1347
   668  000770                     l1333:
   669                           
   670                           ;main.c: 103: else if(set_Val < 100) {
   671  000770  0E64               	movlw	100
   672  000772  5C48               	subwf	main@set_Val,w,c
   673  000774  B0D8               	btfsc	status,0,c
   674  000776  D029               	goto	l1347
   675                           
   676                           ;main.c: 104: lcd_goto(0x04);
   677  000778  0E04               	movlw	4
   678  00077A  EC47  F009         	call	_lcd_goto
   679                           
   680                           ;main.c: 105: lcd_writesc(" ");
   681  00077E  0E06               	movlw	high (STR_6+15)
   682  000780  6E11               	movwf	lcd_writesc@s+1,c
   683  000782  0E10               	movlw	low (STR_6+15)
   684  000784  6E10               	movwf	lcd_writesc@s,c
   685  000786  EC05  F009         	call	_lcd_writesc	;wreg free
   686                           
   687                           ;main.c: 106: lcd_goto(0x04);
   688  00078A  0E04               	movlw	4
   689  00078C  EC47  F009         	call	_lcd_goto
   690                           
   691                           ;main.c: 107: lcd_write(0x30+(set_Val/10));
   692  000790  C048  F00F         	movff	main@set_Val,___awdiv@dividend
   693  000794  6A10               	clrf	___awdiv@dividend+1,c
   694  000796  0E00               	movlw	0
   695  000798  6E12               	movwf	___awdiv@divisor+1,c
   696  00079A  0E0A               	movlw	10
   697  00079C  6E11               	movwf	___awdiv@divisor,c
   698  00079E  ECE8  F007         	call	___awdiv	;wreg free
   699  0007A2  500F               	movf	?___awdiv,w,c
   700  0007A4  0F30               	addlw	48
   701  0007A6  EC82  F008         	call	_lcd_write
   702                           
   703                           ;main.c: 108: lcd_goto(0x05);
   704  0007AA  0E05               	movlw	5
   705  0007AC  EC47  F009         	call	_lcd_goto
   706                           
   707                           ;main.c: 109: lcd_write(0x30+(set_Val%10));
   708  0007B0  C048  F00F         	movff	main@set_Val,___awmod@dividend
   709  0007B4  6A10               	clrf	___awmod@dividend+1,c
   710  0007B6  0E00               	movlw	0
   711  0007B8  6E12               	movwf	___awmod@divisor+1,c
   712  0007BA  0E0A               	movlw	10
   713  0007BC  6E11               	movwf	___awmod@divisor,c
   714  0007BE  EC3A  F008         	call	___awmod	;wreg free
   715  0007C2  500F               	movf	?___awmod,w,c
   716  0007C4  0F30               	addlw	48
   717  0007C6  EC82  F008         	call	_lcd_write
   718  0007CA                     l1347:
   719                           
   720                           ;main.c: 110: }
   721                           ;main.c: 113: act_Val = (char)(sensor_Val/10.23);
   722  0007CA  0E14               	movlw	20
   723  0007CC  6E21               	movwf	___fldiv@f2,c
   724  0007CE  0EAE               	movlw	174
   725  0007D0  6E22               	movwf	___fldiv@f2+1,c
   726  0007D2  0E23               	movlw	35
   727  0007D4  6E23               	movwf	___fldiv@f2+2,c
   728  0007D6  0E41               	movlw	65
   729  0007D8  6E24               	movwf	___fldiv@f2+3,c
   730  0007DA  C03F  F019         	movff	main@sensor_Val,___lwtofl@c
   731  0007DE  C040  F01A         	movff	main@sensor_Val+1,___lwtofl@c+1
   732  0007E2  EC1A  F009         	call	___lwtofl	;wreg free
   733  0007E6  C019  F01D         	movff	?___lwtofl,___fldiv@f1
   734  0007EA  C01A  F01E         	movff	?___lwtofl+1,___fldiv@f1+1
   735  0007EE  C01B  F01F         	movff	?___lwtofl+2,___fldiv@f1+2
   736  0007F2  C01C  F020         	movff	?___lwtofl+3,___fldiv@f1+3
   737  0007F6  ECF2  F005         	call	___fldiv	;wreg free
   738  0007FA  C01D  F030         	movff	?___fldiv,___fltol@f1
   739  0007FE  C01E  F031         	movff	?___fldiv+1,___fltol@f1+1
   740  000802  C01F  F032         	movff	?___fldiv+2,___fltol@f1+2
   741  000806  C020  F033         	movff	?___fldiv+3,___fltol@f1+3
   742  00080A  EC81  F006         	call	___fltol	;wreg free
   743  00080E  C030  F03A         	movff	?___fltol,??_main
   744  000812  C031  F03B         	movff	?___fltol+1,??_main+1
   745  000816  C032  F03C         	movff	?___fltol+2,??_main+2
   746  00081A  C033  F03D         	movff	?___fltol+3,??_main+3
   747  00081E  503A               	movf	??_main,w,c
   748  000820  6E49               	movwf	main@act_Val,c
   749                           
   750                           ;main.c: 114: if(act_Val < 10) {
   751  000822  0E0A               	movlw	10
   752  000824  5C49               	subwf	main@act_Val,w,c
   753  000826  B0D8               	btfsc	status,0,c
   754  000828  D011               	goto	l1359
   755                           
   756                           ;main.c: 115: lcd_goto(0x44);
   757  00082A  0E44               	movlw	68
   758  00082C  EC47  F009         	call	_lcd_goto
   759                           
   760                           ;main.c: 116: lcd_writesc(" ");
   761  000830  0E06               	movlw	high (STR_6+15)
   762  000832  6E11               	movwf	lcd_writesc@s+1,c
   763  000834  0E10               	movlw	low (STR_6+15)
   764  000836  6E10               	movwf	lcd_writesc@s,c
   765  000838  EC05  F009         	call	_lcd_writesc	;wreg free
   766                           
   767                           ;main.c: 117: lcd_goto(0x45);
   768  00083C  0E45               	movlw	69
   769  00083E  EC47  F009         	call	_lcd_goto
   770                           
   771                           ;main.c: 118: lcd_write(0x30+act_Val);
   772  000842  5049               	movf	main@act_Val,w,c
   773  000844  0F30               	addlw	48
   774  000846  EC82  F008         	call	_lcd_write
   775                           
   776                           ;main.c: 119: }
   777  00084A  D02D               	goto	l1373
   778  00084C                     l1359:
   779                           
   780                           ;main.c: 120: else if(act_Val < 100) {
   781  00084C  0E64               	movlw	100
   782  00084E  5C49               	subwf	main@act_Val,w,c
   783  000850  B0D8               	btfsc	status,0,c
   784  000852  D029               	goto	l1373
   785                           
   786                           ;main.c: 121: lcd_goto(0x44);
   787  000854  0E44               	movlw	68
   788  000856  EC47  F009         	call	_lcd_goto
   789                           
   790                           ;main.c: 122: lcd_writesc(" ");
   791  00085A  0E06               	movlw	high (STR_6+15)
   792  00085C  6E11               	movwf	lcd_writesc@s+1,c
   793  00085E  0E10               	movlw	low (STR_6+15)
   794  000860  6E10               	movwf	lcd_writesc@s,c
   795  000862  EC05  F009         	call	_lcd_writesc	;wreg free
   796                           
   797                           ;main.c: 123: lcd_goto(0x44);
   798  000866  0E44               	movlw	68
   799  000868  EC47  F009         	call	_lcd_goto
   800                           
   801                           ;main.c: 124: lcd_write(0x30+(act_Val/10));
   802  00086C  C049  F00F         	movff	main@act_Val,___awdiv@dividend
   803  000870  6A10               	clrf	___awdiv@dividend+1,c
   804  000872  0E00               	movlw	0
   805  000874  6E12               	movwf	___awdiv@divisor+1,c
   806  000876  0E0A               	movlw	10
   807  000878  6E11               	movwf	___awdiv@divisor,c
   808  00087A  ECE8  F007         	call	___awdiv	;wreg free
   809  00087E  500F               	movf	?___awdiv,w,c
   810  000880  0F30               	addlw	48
   811  000882  EC82  F008         	call	_lcd_write
   812                           
   813                           ;main.c: 125: lcd_goto(0x45);
   814  000886  0E45               	movlw	69
   815  000888  EC47  F009         	call	_lcd_goto
   816                           
   817                           ;main.c: 126: lcd_write(0x30+(act_Val%10));
   818  00088C  C049  F00F         	movff	main@act_Val,___awmod@dividend
   819  000890  6A10               	clrf	___awmod@dividend+1,c
   820  000892  0E00               	movlw	0
   821  000894  6E12               	movwf	___awmod@divisor+1,c
   822  000896  0E0A               	movlw	10
   823  000898  6E11               	movwf	___awmod@divisor,c
   824  00089A  EC3A  F008         	call	___awmod	;wreg free
   825  00089E  500F               	movf	?___awmod,w,c
   826  0008A0  0F30               	addlw	48
   827  0008A2  EC82  F008         	call	_lcd_write
   828  0008A6                     l1373:
   829                           
   830                           ;main.c: 127: }
   831                           ;main.c: 133: lcd_goto(0x4D);
   832  0008A6  0E4D               	movlw	77
   833  0008A8  EC47  F009         	call	_lcd_goto
   834                           
   835                           ;main.c: 134: lcd_write(0x00);
   836  0008AC  0E00               	movlw	0
   837  0008AE  EC82  F008         	call	_lcd_write
   838                           
   839                           ;main.c: 137: if(blink_battery%2 == 1){
   840  0008B2  A054               	btfss	_blink_battery,0,c
   841  0008B4  D00B               	goto	l1387
   842                           
   843                           ;main.c: 138: lcd_goto(0x4E);
   844  0008B6  0E4E               	movlw	78
   845  0008B8  EC47  F009         	call	_lcd_goto
   846                           
   847                           ;main.c: 139: lcd_write(0x01);
   848  0008BC  0E01               	movlw	1
   849  0008BE  EC82  F008         	call	_lcd_write
   850                           
   851                           ;main.c: 140: if(blink_battery >10)
   852  0008C2  0E0A               	movlw	10
   853  0008C4  6454               	cpfsgt	_blink_battery,c
   854  0008C6  D002               	goto	l1387
   855                           
   856                           ;main.c: 141: blink_battery = 1;
   857  0008C8  0E01               	movlw	1
   858  0008CA  6E54               	movwf	_blink_battery,c
   859  0008CC                     l1387:
   860                           
   861                           ;main.c: 142: }
   862                           ;main.c: 143: if(blink_battery%2 == 0){
   863  0008CC  B054               	btfsc	_blink_battery,0,c
   864  0008CE  D006               	goto	l1393
   865                           
   866                           ;main.c: 144: lcd_goto(0x4E);
   867  0008D0  0E4E               	movlw	78
   868  0008D2  EC47  F009         	call	_lcd_goto
   869                           
   870                           ;main.c: 145: lcd_write(0x02);
   871  0008D6  0E02               	movlw	2
   872  0008D8  EC82  F008         	call	_lcd_write
   873  0008DC                     l1393:
   874                           
   875                           ;main.c: 146: }
   876                           ;main.c: 151: if(PORTCbits.RC5 && tid >= (tid_old+50)) {
   877  0008DC  AA82               	btfss	3970,5,c	;volatile
   878  0008DE  D012               	goto	l1401
   879  0008E0  0E32               	movlw	50
   880  0008E2  2446               	addwf	main@tid_old,w,c
   881  0008E4  6E3A               	movwf	??_main& (0+255),c
   882  0008E6  0E00               	movlw	0
   883  0008E8  2047               	addwfc	main@tid_old+1,w,c
   884  0008EA  6E3B               	movwf	(??_main+1)& (0+255),c
   885  0008EC  503A               	movf	??_main,w,c
   886  0008EE  5C4A               	subwf	main@tid,w,c
   887  0008F0  503B               	movf	??_main+1,w,c
   888  0008F2  584B               	subwfb	main@tid+1,w,c
   889  0008F4  A0D8               	btfss	status,0,c
   890  0008F6  D006               	goto	l1401
   891                           
   892                           ;main.c: 152: timmar += 1;
   893  0008F8  4A52               	infsnz	_timmar,f,c
   894  0008FA  2A53               	incf	_timmar+1,f,c
   895                           
   896                           ;main.c: 153: tid_old = tid;
   897  0008FC  C04A  F046         	movff	main@tid,main@tid_old
   898  000900  C04B  F047         	movff	main@tid+1,main@tid_old+1
   899  000904                     l1401:
   900                           
   901                           ;main.c: 154: }
   902                           ;main.c: 155: if(PORTBbits.RB6 && tid >= (tid_old+50)) {
   903  000904  AC81               	btfss	3969,6,c	;volatile
   904  000906  D012               	goto	l1409
   905  000908  0E32               	movlw	50
   906  00090A  2446               	addwf	main@tid_old,w,c
   907  00090C  6E3A               	movwf	??_main& (0+255),c
   908  00090E  0E00               	movlw	0
   909  000910  2047               	addwfc	main@tid_old+1,w,c
   910  000912  6E3B               	movwf	(??_main+1)& (0+255),c
   911  000914  503A               	movf	??_main,w,c
   912  000916  5C4A               	subwf	main@tid,w,c
   913  000918  503B               	movf	??_main+1,w,c
   914  00091A  584B               	subwfb	main@tid+1,w,c
   915  00091C  A0D8               	btfss	status,0,c
   916  00091E  D006               	goto	l1409
   917                           
   918                           ;main.c: 156: minuter += 1;
   919  000920  4A4C               	infsnz	_minuter,f,c
   920  000922  2A4D               	incf	_minuter+1,f,c
   921                           
   922                           ;main.c: 157: tid_old = tid;
   923  000924  C04A  F046         	movff	main@tid,main@tid_old
   924  000928  C04B  F047         	movff	main@tid+1,main@tid_old+1
   925  00092C                     l1409:
   926                           
   927                           ;main.c: 158: }
   928                           ;main.c: 159: if(PORTBbits.RB7 && tid >= (tid_old+50)) {
   929  00092C  AE81               	btfss	3969,7,c	;volatile
   930  00092E  D014               	goto	l1417
   931  000930  0E32               	movlw	50
   932  000932  2446               	addwf	main@tid_old,w,c
   933  000934  6E3A               	movwf	??_main& (0+255),c
   934  000936  0E00               	movlw	0
   935  000938  2047               	addwfc	main@tid_old+1,w,c
   936  00093A  6E3B               	movwf	(??_main+1)& (0+255),c
   937  00093C  503A               	movf	??_main,w,c
   938  00093E  5C4A               	subwf	main@tid,w,c
   939  000940  503B               	movf	??_main+1,w,c
   940  000942  584B               	subwfb	main@tid+1,w,c
   941  000944  A0D8               	btfss	status,0,c
   942  000946  D008               	goto	l1417
   943                           
   944                           ;main.c: 160: sekunder = 0;
   945  000948  0E00               	movlw	0
   946  00094A  6E4F               	movwf	_sekunder+1,c
   947  00094C  0E00               	movlw	0
   948  00094E  6E4E               	movwf	_sekunder,c
   949                           
   950                           ;main.c: 161: tid_old = tid;
   951  000950  C04A  F046         	movff	main@tid,main@tid_old
   952  000954  C04B  F047         	movff	main@tid+1,main@tid_old+1
   953  000958                     l1417:
   954                           
   955                           ;main.c: 162: }
   956                           ;main.c: 164: if(PORTBbits.RB6 && PORTBbits.RB7 == 1){
   957  000958  BC81               	btfsc	3969,6,c	;volatile
   958  00095A  AE81               	btfss	3969,7,c	;volatile
   959  00095C  D00C               	goto	l1423
   960                           
   961                           ;main.c: 165: sekunder = 0;
   962  00095E  0E00               	movlw	0
   963  000960  6E4F               	movwf	_sekunder+1,c
   964  000962  0E00               	movlw	0
   965  000964  6E4E               	movwf	_sekunder,c
   966                           
   967                           ;main.c: 166: minuter = 0;
   968  000966  0E00               	movlw	0
   969  000968  6E4D               	movwf	_minuter+1,c
   970  00096A  0E00               	movlw	0
   971  00096C  6E4C               	movwf	_minuter,c
   972                           
   973                           ;main.c: 167: timmar = 0;
   974  00096E  0E00               	movlw	0
   975  000970  6E53               	movwf	_timmar+1,c
   976  000972  0E00               	movlw	0
   977  000974  6E52               	movwf	_timmar,c
   978  000976                     l1423:
   979                           
   980                           ;main.c: 168: }
   981                           ;main.c: 170: printTime(sekunder,minuter,timmar);
   982  000976  C04C  F017         	movff	_minuter,printTime@minuter
   983  00097A  C052  F018         	movff	_timmar,printTime@timmar
   984  00097E  504E               	movf	_sekunder,w,c
   985  000980  EC63  F005         	call	_printTime
   986  000984  D661               	goto	l1285
   987  000986                     __end_of_main:
   988                           	opt stack 0
   989                           tblptru	equ	0xFF8
   990                           postinc0	equ	0xFEE
   991                           wreg	equ	0xFE8
   992                           status	equ	0xFD8
   993                           
   994 ;; *************** function _printTime *****************
   995 ;; Defined at:
   996 ;;		line 286 in file "main.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  sekunder        1    wreg     unsigned char 
   999 ;;  minuter         1   22[COMRAM] unsigned char 
  1000 ;;  timmar          1   23[COMRAM] unsigned char 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  sekunder        1   26[COMRAM] unsigned char 
  1003 ;;  var             2   33[COMRAM] int 
  1004 ;;  i               2   31[COMRAM] int 
  1005 ;;  pos2            2   29[COMRAM] int 
  1006 ;;  pos1            2   27[COMRAM] int 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;		None               void
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, prodl, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1016 ;;      Params:         2       0       0       0       0       0       0
  1017 ;;      Locals:         9       0       0       0       0       0       0
  1018 ;;      Temps:          2       0       0       0       0       0       0
  1019 ;;      Totals:        13       0       0       0       0       0       0
  1020 ;;Total ram usage:       13 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    3
  1023 ;; This function calls:
  1024 ;;		___awdiv
  1025 ;;		___awmod
  1026 ;;		_lcd_goto
  1027 ;;		_lcd_write
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text1
  1034  000AC6                     __ptext1:
  1035                           	opt stack 0
  1036  000AC6                     _printTime:
  1037                           	opt stack 27
  1038                           
  1039                           ;incstack = 0
  1040                           ;printTime@sekunder stored from wreg
  1041  000AC6  6E1B               	movwf	printTime@sekunder,c
  1042                           
  1043                           ;main.c: 288: int i = 0;
  1044  000AC8  0E00               	movlw	0
  1045  000ACA  6E21               	movwf	printTime@i+1,c
  1046  000ACC  0E00               	movlw	0
  1047  000ACE  6E20               	movwf	printTime@i,c
  1048                           
  1049                           ;main.c: 289: int var = 0;
  1050  000AD0  0E00               	movlw	0
  1051  000AD2  6E23               	movwf	printTime@var+1,c
  1052  000AD4  0E00               	movlw	0
  1053  000AD6  6E22               	movwf	printTime@var,c
  1054                           
  1055                           ;main.c: 290: int pos1 = 0, pos2 = 0;
  1056  000AD8  0E00               	movlw	0
  1057  000ADA  6E1D               	movwf	printTime@pos1+1,c
  1058  000ADC  0E00               	movlw	0
  1059  000ADE  6E1C               	movwf	printTime@pos1,c
  1060  000AE0  0E00               	movlw	0
  1061  000AE2  6E1F               	movwf	printTime@pos2+1,c
  1062  000AE4  0E00               	movlw	0
  1063  000AE6  6E1E               	movwf	printTime@pos2,c
  1064                           
  1065                           ;main.c: 291: for(i=0; i<3; i++){
  1066  000AE8  0E00               	movlw	0
  1067  000AEA  6E21               	movwf	printTime@i+1,c
  1068  000AEC  0E00               	movlw	0
  1069  000AEE  6E20               	movwf	printTime@i,c
  1070  000AF0  5021               	movf	printTime@i+1,w,c
  1071  000AF2  0A80               	xorlw	128
  1072  000AF4  0F80               	addlw	-128
  1073  000AF6  0E03               	movlw	3
  1074  000AF8  B4D8               	btfsc	status,2,c
  1075  000AFA  5C20               	subwf	printTime@i,w,c
  1076  000AFC  B0D8               	btfsc	status,0,c
  1077  000AFE  0012               	return	
  1078  000B00  D022               	goto	l1157
  1079  000B02                     l143:
  1080                           
  1081                           ;main.c: 294: var = timmar;
  1082  000B02  C018  F022         	movff	printTime@timmar,printTime@var
  1083  000B06  6A23               	clrf	printTime@var+1,c
  1084                           
  1085                           ;main.c: 295: pos1 = 0x08;
  1086  000B08  0E00               	movlw	0
  1087  000B0A  6E1D               	movwf	printTime@pos1+1,c
  1088  000B0C  0E08               	movlw	8
  1089  000B0E  6E1C               	movwf	printTime@pos1,c
  1090                           
  1091                           ;main.c: 296: pos2 =0x09;
  1092  000B10  0E00               	movlw	0
  1093  000B12  6E1F               	movwf	printTime@pos2+1,c
  1094  000B14  0E09               	movlw	9
  1095  000B16  D015               	goto	L3
  1096  000B18                     l145:
  1097                           
  1098                           ;main.c: 299: var = minuter;
  1099  000B18  C017  F022         	movff	printTime@minuter,printTime@var
  1100  000B1C  6A23               	clrf	printTime@var+1,c
  1101                           
  1102                           ;main.c: 300: pos1 = 0x0B;
  1103  000B1E  0E00               	movlw	0
  1104  000B20  6E1D               	movwf	printTime@pos1+1,c
  1105  000B22  0E0B               	movlw	11
  1106  000B24  6E1C               	movwf	printTime@pos1,c
  1107                           
  1108                           ;main.c: 301: pos2= 0x0C;
  1109  000B26  0E00               	movlw	0
  1110  000B28  6E1F               	movwf	printTime@pos2+1,c
  1111  000B2A  0E0C               	movlw	12
  1112  000B2C  D00A               	goto	L3
  1113  000B2E                     l146:
  1114                           
  1115                           ;main.c: 304: var = sekunder;
  1116  000B2E  C01B  F022         	movff	printTime@sekunder,printTime@var
  1117  000B32  6A23               	clrf	printTime@var+1,c
  1118                           
  1119                           ;main.c: 305: pos1 = 0x0E;
  1120  000B34  0E00               	movlw	0
  1121  000B36  6E1D               	movwf	printTime@pos1+1,c
  1122  000B38  0E0E               	movlw	14
  1123  000B3A  6E1C               	movwf	printTime@pos1,c
  1124                           
  1125                           ;main.c: 306: pos2 = 0x0F;
  1126  000B3C  0E00               	movlw	0
  1127  000B3E  6E1F               	movwf	printTime@pos2+1,c
  1128  000B40  0E0F               	movlw	15
  1129  000B42                     L3:
  1130  000B42  6E1E               	movwf	printTime@pos2,c
  1131                           
  1132                           ;main.c: 307: break;
  1133  000B44  D012               	goto	l1159
  1134  000B46                     l1157:
  1135  000B46  C020  F019         	movff	printTime@i,??_printTime
  1136  000B4A  C021  F01A         	movff	printTime@i+1,??_printTime+1
  1137                           
  1138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1139                           ; Switch size 1, requested type "space"
  1140                           ; Number of cases is 1, Range of values is 0 to 0
  1141                           ; switch strategies available:
  1142                           ; Name         Instructions Cycles
  1143                           ; simple_byte            4     3 (average)
  1144                           ;	Chosen strategy is simple_byte
  1145  000B4E  501A               	movf	??_printTime+1,w,c
  1146  000B50  0A00               	xorlw	0	; case 0
  1147  000B52  A4D8               	btfss	status,2,c
  1148  000B54  D00A               	goto	l1159
  1149                           
  1150                           ; Switch size 1, requested type "space"
  1151                           ; Number of cases is 3, Range of values is 0 to 2
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte           10     6 (average)
  1155                           ;	Chosen strategy is simple_byte
  1156  000B56  5019               	movf	??_printTime,w,c
  1157  000B58  0A00               	xorlw	0	; case 0
  1158  000B5A  B4D8               	btfsc	status,2,c
  1159  000B5C  D7D2               	goto	l143
  1160  000B5E  0A01               	xorlw	1	; case 1
  1161  000B60  B4D8               	btfsc	status,2,c
  1162  000B62  D7DA               	goto	l145
  1163  000B64  0A03               	xorlw	3	; case 2
  1164  000B66  B4D8               	btfsc	status,2,c
  1165  000B68  D7E2               	goto	l146
  1166  000B6A                     l1159:
  1167                           
  1168                           ;main.c: 309: if(var < 10) {
  1169  000B6A  5023               	movf	printTime@var+1,w,c
  1170  000B6C  0A80               	xorlw	128
  1171  000B6E  6EF3               	movwf	prodl,c
  1172  000B70  0E80               	movlw	128
  1173  000B72  5CF3               	subwf	prodl,w,c
  1174  000B74  0E0A               	movlw	10
  1175  000B76  B4D8               	btfsc	status,2,c
  1176  000B78  5C22               	subwf	printTime@var,w,c
  1177  000B7A  B0D8               	btfsc	status,0,c
  1178  000B7C  D00E               	goto	l1169
  1179                           
  1180                           ;main.c: 310: lcd_goto(pos1);
  1181  000B7E  501C               	movf	printTime@pos1,w,c
  1182  000B80  EC47  F009         	call	_lcd_goto
  1183                           
  1184                           ;main.c: 311: lcd_write('0');
  1185  000B84  0E30               	movlw	48
  1186  000B86  EC82  F008         	call	_lcd_write
  1187                           
  1188                           ;main.c: 312: lcd_goto(pos2);
  1189  000B8A  501E               	movf	printTime@pos2,w,c
  1190  000B8C  EC47  F009         	call	_lcd_goto
  1191                           
  1192                           ;main.c: 313: lcd_write(0x30+var);
  1193  000B90  5022               	movf	printTime@var,w,c
  1194  000B92  0F30               	addlw	48
  1195  000B94  EC82  F008         	call	_lcd_write
  1196                           
  1197                           ;main.c: 314: }
  1198  000B98  D022               	goto	l1175
  1199  000B9A                     l1169:
  1200                           
  1201                           ;main.c: 315: else {
  1202                           ;main.c: 316: lcd_goto(pos1);
  1203  000B9A  501C               	movf	printTime@pos1,w,c
  1204  000B9C  EC47  F009         	call	_lcd_goto
  1205                           
  1206                           ;main.c: 317: lcd_write(0x30+(var/10));
  1207  000BA0  C022  F00F         	movff	printTime@var,___awdiv@dividend
  1208  000BA4  C023  F010         	movff	printTime@var+1,___awdiv@dividend+1
  1209  000BA8  0E00               	movlw	0
  1210  000BAA  6E12               	movwf	___awdiv@divisor+1,c
  1211  000BAC  0E0A               	movlw	10
  1212  000BAE  6E11               	movwf	___awdiv@divisor,c
  1213  000BB0  ECE8  F007         	call	___awdiv	;wreg free
  1214  000BB4  500F               	movf	?___awdiv,w,c
  1215  000BB6  0F30               	addlw	48
  1216  000BB8  EC82  F008         	call	_lcd_write
  1217                           
  1218                           ;main.c: 318: lcd_goto(pos2);
  1219  000BBC  501E               	movf	printTime@pos2,w,c
  1220  000BBE  EC47  F009         	call	_lcd_goto
  1221                           
  1222                           ;main.c: 319: lcd_write(0x30+(var%10));
  1223  000BC2  C022  F00F         	movff	printTime@var,___awmod@dividend
  1224  000BC6  C023  F010         	movff	printTime@var+1,___awmod@dividend+1
  1225  000BCA  0E00               	movlw	0
  1226  000BCC  6E12               	movwf	___awmod@divisor+1,c
  1227  000BCE  0E0A               	movlw	10
  1228  000BD0  6E11               	movwf	___awmod@divisor,c
  1229  000BD2  EC3A  F008         	call	___awmod	;wreg free
  1230  000BD6  500F               	movf	?___awmod,w,c
  1231  000BD8  0F30               	addlw	48
  1232  000BDA  EC82  F008         	call	_lcd_write
  1233  000BDE                     l1175:
  1234  000BDE  4A20               	infsnz	printTime@i,f,c
  1235  000BE0  2A21               	incf	printTime@i+1,f,c
  1236  000BE2  D786               	goto	L4
  1237  000BE4                     __end_of_printTime:
  1238                           	opt stack 0
  1239                           tblptru	equ	0xFF8
  1240                           prodl	equ	0xFF3
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function ___awmod *****************
  1246 ;; Defined at:
  1247 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  dividend        2   14[COMRAM] int 
  1250 ;;  divisor         2   16[COMRAM] int 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  sign            1   19[COMRAM] unsigned char 
  1253 ;;  counter         1   18[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2   14[COMRAM] int 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, prodl
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1263 ;;      Params:         4       0       0       0       0       0       0
  1264 ;;      Locals:         2       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0
  1266 ;;      Totals:         6       0       0       0       0       0       0
  1267 ;;Total ram usage:        6 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;;		_printTime
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text2
  1279  001074                     __ptext2:
  1280                           	opt stack 0
  1281  001074                     ___awmod:
  1282                           	opt stack 28
  1283                           
  1284                           ;incstack = 0
  1285  001074  0E00               	movlw	0
  1286  001076  6E14               	movwf	___awmod@sign,c
  1287  001078  5010               	movf	___awmod@dividend+1,w,c
  1288  00107A  0A80               	xorlw	128
  1289  00107C  6EF3               	movwf	prodl,c
  1290  00107E  0E80               	movlw	128
  1291  001080  5CF3               	subwf	prodl,w,c
  1292  001082  0E00               	movlw	0
  1293  001084  B4D8               	btfsc	status,2,c
  1294  001086  5C0F               	subwf	___awmod@dividend,w,c
  1295  001088  B0D8               	btfsc	status,0,c
  1296  00108A  D006               	goto	l937
  1297  00108C  6C0F               	negf	___awmod@dividend,c
  1298  00108E  1E10               	comf	___awmod@dividend+1,f,c
  1299  001090  B0D8               	btfsc	status,0,c
  1300  001092  2A10               	incf	___awmod@dividend+1,f,c
  1301  001094  0E01               	movlw	1
  1302  001096  6E14               	movwf	___awmod@sign,c
  1303  001098                     l937:
  1304  001098  5012               	movf	___awmod@divisor+1,w,c
  1305  00109A  0A80               	xorlw	128
  1306  00109C  6EF3               	movwf	prodl,c
  1307  00109E  0E80               	movlw	128
  1308  0010A0  5CF3               	subwf	prodl,w,c
  1309  0010A2  0E00               	movlw	0
  1310  0010A4  B4D8               	btfsc	status,2,c
  1311  0010A6  5C11               	subwf	___awmod@divisor,w,c
  1312  0010A8  B0D8               	btfsc	status,0,c
  1313  0010AA  D004               	goto	l941
  1314  0010AC  6C11               	negf	___awmod@divisor,c
  1315  0010AE  1E12               	comf	___awmod@divisor+1,f,c
  1316  0010B0  B0D8               	btfsc	status,0,c
  1317  0010B2  2A12               	incf	___awmod@divisor+1,f,c
  1318  0010B4                     l941:
  1319  0010B4  5012               	movf	___awmod@divisor+1,w,c
  1320  0010B6  1011               	iorwf	___awmod@divisor,w,c
  1321  0010B8  B4D8               	btfsc	status,2,c
  1322  0010BA  D018               	goto	l957
  1323  0010BC  0E01               	movlw	1
  1324  0010BE  6E13               	movwf	___awmod@counter,c
  1325  0010C0  D004               	goto	l947
  1326  0010C2                     l945:
  1327  0010C2  90D8               	bcf	status,0,c
  1328  0010C4  3611               	rlcf	___awmod@divisor,f,c
  1329  0010C6  3612               	rlcf	___awmod@divisor+1,f,c
  1330  0010C8  2A13               	incf	___awmod@counter,f,c
  1331  0010CA                     l947:
  1332  0010CA  AE12               	btfss	___awmod@divisor+1,7,c
  1333  0010CC  D7FA               	goto	l945
  1334  0010CE                     l949:
  1335  0010CE  5011               	movf	___awmod@divisor,w,c
  1336  0010D0  5C0F               	subwf	___awmod@dividend,w,c
  1337  0010D2  5012               	movf	___awmod@divisor+1,w,c
  1338  0010D4  5810               	subwfb	___awmod@dividend+1,w,c
  1339  0010D6  A0D8               	btfss	status,0,c
  1340  0010D8  D004               	goto	l953
  1341  0010DA  5011               	movf	___awmod@divisor,w,c
  1342  0010DC  5E0F               	subwf	___awmod@dividend,f,c
  1343  0010DE  5012               	movf	___awmod@divisor+1,w,c
  1344  0010E0  5A10               	subwfb	___awmod@dividend+1,f,c
  1345  0010E2                     l953:
  1346  0010E2  90D8               	bcf	status,0,c
  1347  0010E4  3212               	rrcf	___awmod@divisor+1,f,c
  1348  0010E6  3211               	rrcf	___awmod@divisor,f,c
  1349  0010E8  2E13               	decfsz	___awmod@counter,f,c
  1350  0010EA  D7F1               	goto	l949
  1351  0010EC                     l957:
  1352  0010EC  5014               	movf	___awmod@sign,w,c
  1353  0010EE  B4D8               	btfsc	status,2,c
  1354  0010F0  D004               	goto	l961
  1355  0010F2  6C0F               	negf	___awmod@dividend,c
  1356  0010F4  1E10               	comf	___awmod@dividend+1,f,c
  1357  0010F6  B0D8               	btfsc	status,0,c
  1358  0010F8  2A10               	incf	___awmod@dividend+1,f,c
  1359  0010FA                     l961:
  1360  0010FA  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1361  0010FE  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1362  001102  0012               	return	
  1363  001104                     __end_of___awmod:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           prodl	equ	0xFF3
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           status	equ	0xFD8
  1370                           
  1371 ;; *************** function ___awdiv *****************
  1372 ;; Defined at:
  1373 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  dividend        2   14[COMRAM] int 
  1376 ;;  divisor         2   16[COMRAM] int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  quotient        2   20[COMRAM] int 
  1379 ;;  sign            1   19[COMRAM] unsigned char 
  1380 ;;  counter         1   18[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  2   14[COMRAM] int 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, prodl
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         4       0       0       0       0       0       0
  1391 ;;      Locals:         4       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0
  1393 ;;      Totals:         8       0       0       0       0       0       0
  1394 ;;Total ram usage:        8 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;;		_printTime
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text3
  1406  000FD0                     __ptext3:
  1407                           	opt stack 0
  1408  000FD0                     ___awdiv:
  1409                           	opt stack 28
  1410                           
  1411                           ;incstack = 0
  1412  000FD0  0E00               	movlw	0
  1413  000FD2  6E14               	movwf	___awdiv@sign,c
  1414  000FD4  5012               	movf	___awdiv@divisor+1,w,c
  1415  000FD6  0A80               	xorlw	128
  1416  000FD8  6EF3               	movwf	prodl,c
  1417  000FDA  0E80               	movlw	128
  1418  000FDC  5CF3               	subwf	prodl,w,c
  1419  000FDE  0E00               	movlw	0
  1420  000FE0  B4D8               	btfsc	status,2,c
  1421  000FE2  5C11               	subwf	___awdiv@divisor,w,c
  1422  000FE4  B0D8               	btfsc	status,0,c
  1423  000FE6  D006               	goto	l893
  1424  000FE8  6C11               	negf	___awdiv@divisor,c
  1425  000FEA  1E12               	comf	___awdiv@divisor+1,f,c
  1426  000FEC  B0D8               	btfsc	status,0,c
  1427  000FEE  2A12               	incf	___awdiv@divisor+1,f,c
  1428  000FF0  0E01               	movlw	1
  1429  000FF2  6E14               	movwf	___awdiv@sign,c
  1430  000FF4                     l893:
  1431  000FF4  5010               	movf	___awdiv@dividend+1,w,c
  1432  000FF6  0A80               	xorlw	128
  1433  000FF8  6EF3               	movwf	prodl,c
  1434  000FFA  0E80               	movlw	128
  1435  000FFC  5CF3               	subwf	prodl,w,c
  1436  000FFE  0E00               	movlw	0
  1437  001000  B4D8               	btfsc	status,2,c
  1438  001002  5C0F               	subwf	___awdiv@dividend,w,c
  1439  001004  B0D8               	btfsc	status,0,c
  1440  001006  D006               	goto	l899
  1441  001008  6C0F               	negf	___awdiv@dividend,c
  1442  00100A  1E10               	comf	___awdiv@dividend+1,f,c
  1443  00100C  B0D8               	btfsc	status,0,c
  1444  00100E  2A10               	incf	___awdiv@dividend+1,f,c
  1445  001010  0E01               	movlw	1
  1446  001012  1A14               	xorwf	___awdiv@sign,f,c
  1447  001014                     l899:
  1448  001014  0E00               	movlw	0
  1449  001016  6E16               	movwf	___awdiv@quotient+1,c
  1450  001018  0E00               	movlw	0
  1451  00101A  6E15               	movwf	___awdiv@quotient,c
  1452  00101C  5012               	movf	___awdiv@divisor+1,w,c
  1453  00101E  1011               	iorwf	___awdiv@divisor,w,c
  1454  001020  B4D8               	btfsc	status,2,c
  1455  001022  D01C               	goto	l921
  1456  001024  0E01               	movlw	1
  1457  001026  6E13               	movwf	___awdiv@counter,c
  1458  001028  D004               	goto	l907
  1459  00102A                     l905:
  1460  00102A  90D8               	bcf	status,0,c
  1461  00102C  3611               	rlcf	___awdiv@divisor,f,c
  1462  00102E  3612               	rlcf	___awdiv@divisor+1,f,c
  1463  001030  2A13               	incf	___awdiv@counter,f,c
  1464  001032                     l907:
  1465  001032  AE12               	btfss	___awdiv@divisor+1,7,c
  1466  001034  D7FA               	goto	l905
  1467  001036                     l909:
  1468  001036  90D8               	bcf	status,0,c
  1469  001038  3615               	rlcf	___awdiv@quotient,f,c
  1470  00103A  3616               	rlcf	___awdiv@quotient+1,f,c
  1471  00103C  5011               	movf	___awdiv@divisor,w,c
  1472  00103E  5C0F               	subwf	___awdiv@dividend,w,c
  1473  001040  5012               	movf	___awdiv@divisor+1,w,c
  1474  001042  5810               	subwfb	___awdiv@dividend+1,w,c
  1475  001044  A0D8               	btfss	status,0,c
  1476  001046  D005               	goto	l917
  1477  001048  5011               	movf	___awdiv@divisor,w,c
  1478  00104A  5E0F               	subwf	___awdiv@dividend,f,c
  1479  00104C  5012               	movf	___awdiv@divisor+1,w,c
  1480  00104E  5A10               	subwfb	___awdiv@dividend+1,f,c
  1481  001050  8015               	bsf	___awdiv@quotient,0,c
  1482  001052                     l917:
  1483  001052  90D8               	bcf	status,0,c
  1484  001054  3212               	rrcf	___awdiv@divisor+1,f,c
  1485  001056  3211               	rrcf	___awdiv@divisor,f,c
  1486  001058  2E13               	decfsz	___awdiv@counter,f,c
  1487  00105A  D7ED               	goto	l909
  1488  00105C                     l921:
  1489  00105C  5014               	movf	___awdiv@sign,w,c
  1490  00105E  B4D8               	btfsc	status,2,c
  1491  001060  D004               	goto	l925
  1492  001062  6C15               	negf	___awdiv@quotient,c
  1493  001064  1E16               	comf	___awdiv@quotient+1,f,c
  1494  001066  B0D8               	btfsc	status,0,c
  1495  001068  2A16               	incf	___awdiv@quotient+1,f,c
  1496  00106A                     l925:
  1497  00106A  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  1498  00106E  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  1499  001072  0012               	return	
  1500  001074                     __end_of___awdiv:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           prodl	equ	0xFF3
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _lcd_init *****************
  1509 ;; Defined at:
  1510 ;;		line 100 in file "lcd.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;		None               void
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1524 ;;      Params:         0       0       0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0
  1526 ;;      Temps:          1       0       0       0       0       0       0
  1527 ;;      Totals:         1       0       0       0       0       0       0
  1528 ;;Total ram usage:        1 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    3
  1531 ;; This function calls:
  1532 ;;		_lcd_clear
  1533 ;;		_lcd_cmd
  1534 ;;		_lcd_goto
  1535 ;;		_lcd_write
  1536 ;;		_lcd_writesc
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text4
  1543  000EF8                     __ptext4:
  1544                           	opt stack 0
  1545  000EF8                     _lcd_init:
  1546                           	opt stack 27
  1547                           
  1548                           ;incstack = 0
  1549  000EF8  948B               	bcf	3979,2,c	;volatile
  1550                           
  1551                           ;lcd.c: 102: LATCbits.LATC3 = 0;
  1552  000EFA  968B               	bcf	3979,3,c	;volatile
  1553                           
  1554                           ;lcd.c: 103: _delay((unsigned long)((40)*(4000000/4000.0)));
  1555  000EFC  0E34               	movlw	52
  1556  000EFE  6E12               	movwf	??_lcd_init& (0+255),c
  1557  000F00  0EF2               	movlw	242
  1558  000F02                     u807:
  1559  000F02  2EE8               	decfsz	wreg,f,c
  1560  000F04  D7FE               	goto	u807
  1561  000F06  2E12               	decfsz	??_lcd_init& (0+255),f,c
  1562  000F08  D7FC               	goto	u807
  1563                           
  1564                           ;lcd.c: 104: LATBbits.LATB2 = 1;
  1565  000F0A  848A               	bsf	3978,2,c	;volatile
  1566                           
  1567                           ;lcd.c: 105: LATBbits.LATB3 = 1;
  1568  000F0C  868A               	bsf	3978,3,c	;volatile
  1569                           
  1570                           ;lcd.c: 106: LATBbits.LATB4 = 0;
  1571  000F0E  988A               	bcf	3978,4,c	;volatile
  1572                           
  1573                           ;lcd.c: 107: LATBbits.LATB5 = 0;
  1574  000F10  9A8A               	bcf	3978,5,c	;volatile
  1575                           
  1576                           ;lcd.c: 108: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  1577  000F12  868B               	bsf	3979,3,c	;volatile
  1578  000F14  F000               	nop	
  1579  000F16  968B               	bcf	3979,3,c	;volatile
  1580                           
  1581                           ;lcd.c: 109: _delay((unsigned long)((6)*(4000000/4000.0)));
  1582  000F18  0E08               	movlw	8
  1583  000F1A  6E12               	movwf	??_lcd_init& (0+255),c
  1584  000F1C  0ECA               	movlw	202
  1585  000F1E                     u817:
  1586  000F1E  2EE8               	decfsz	wreg,f,c
  1587  000F20  D7FE               	goto	u817
  1588  000F22  2E12               	decfsz	??_lcd_init& (0+255),f,c
  1589  000F24  D7FC               	goto	u817
  1590                           
  1591                           ;lcd.c: 110: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  1592  000F26  868B               	bsf	3979,3,c	;volatile
  1593  000F28  F000               	nop	
  1594  000F2A  968B               	bcf	3979,3,c	;volatile
  1595                           
  1596                           ;lcd.c: 111: _delay((unsigned long)((2)*(4000000/4000.0)));
  1597  000F2C  0E03               	movlw	3
  1598  000F2E  6E12               	movwf	??_lcd_init& (0+255),c
  1599  000F30  0E98               	movlw	152
  1600  000F32                     u827:
  1601  000F32  2EE8               	decfsz	wreg,f,c
  1602  000F34  D7FE               	goto	u827
  1603  000F36  2E12               	decfsz	??_lcd_init& (0+255),f,c
  1604  000F38  D7FC               	goto	u827
  1605                           
  1606                           ;lcd.c: 112: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  1607  000F3A  868B               	bsf	3979,3,c	;volatile
  1608  000F3C  F000               	nop	
  1609  000F3E  968B               	bcf	3979,3,c	;volatile
  1610                           
  1611                           ;lcd.c: 113: _delay((unsigned long)((2)*(4000000/4000.0)));
  1612  000F40  0E03               	movlw	3
  1613  000F42  6E12               	movwf	??_lcd_init& (0+255),c
  1614  000F44  0E98               	movlw	152
  1615  000F46                     u837:
  1616  000F46  2EE8               	decfsz	wreg,f,c
  1617  000F48  D7FE               	goto	u837
  1618  000F4A  2E12               	decfsz	??_lcd_init& (0+255),f,c
  1619  000F4C  D7FC               	goto	u837
  1620                           
  1621                           ;lcd.c: 114: LATBbits.LATB2 = 0;
  1622  000F4E  948A               	bcf	3978,2,c	;volatile
  1623                           
  1624                           ;lcd.c: 115: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbi
      +                          ts.LATC3=0;};
  1625  000F50  868B               	bsf	3979,3,c	;volatile
  1626  000F52  F000               	nop	
  1627  000F54  968B               	bcf	3979,3,c	;volatile
  1628                           
  1629                           ;lcd.c: 116: _delay((unsigned long)((2)*(4000000/4000.0)));
  1630  000F56  0E03               	movlw	3
  1631  000F58  6E12               	movwf	??_lcd_init& (0+255),c
  1632  000F5A  0E98               	movlw	152
  1633  000F5C                     u847:
  1634  000F5C  2EE8               	decfsz	wreg,f,c
  1635  000F5E  D7FE               	goto	u847
  1636  000F60  2E12               	decfsz	??_lcd_init& (0+255),f,c
  1637  000F62  D7FC               	goto	u847
  1638                           
  1639                           ;lcd.c: 117: lcd_cmd(0b00101000);
  1640  000F64  0E28               	movlw	40
  1641  000F66  EC57  F009         	call	_lcd_cmd
  1642                           
  1643                           ;lcd.c: 118: lcd_cmd(0b00001100);
  1644  000F6A  0E0C               	movlw	12
  1645  000F6C  EC57  F009         	call	_lcd_cmd
  1646                           
  1647                           ;lcd.c: 119: lcd_cmd(0b00000110);
  1648  000F70  0E06               	movlw	6
  1649  000F72  EC57  F009         	call	_lcd_cmd
  1650                           
  1651                           ;lcd.c: 120: lcd_clear();
  1652  000F76  EC2F  F009         	call	_lcd_clear	;wreg free
  1653                           
  1654                           ;lcd.c: 122: lcd_goto(0);
  1655  000F7A  0E00               	movlw	0
  1656  000F7C  EC47  F009         	call	_lcd_goto
  1657                           
  1658                           ;lcd.c: 123: lcd_writesc("b r:  % 00:00:00");
  1659  000F80  0E06               	movlw	high STR_5
  1660  000F82  6E11               	movwf	lcd_writesc@s+1,c
  1661  000F84  0E12               	movlw	low STR_5
  1662  000F86  6E10               	movwf	lcd_writesc@s,c
  1663  000F88  EC05  F009         	call	_lcd_writesc	;wreg free
  1664                           
  1665                           ;lcd.c: 124: lcd_goto(0x40);
  1666  000F8C  0E40               	movlw	64
  1667  000F8E  EC47  F009         	call	_lcd_goto
  1668                           
  1669                           ;lcd.c: 125: lcd_writesc(" r:   %         ");
  1670  000F92  0E06               	movlw	high STR_6
  1671  000F94  6E11               	movwf	lcd_writesc@s+1,c
  1672  000F96  0E01               	movlw	low STR_6
  1673  000F98  6E10               	movwf	lcd_writesc@s,c
  1674  000F9A  EC05  F009         	call	_lcd_writesc	;wreg free
  1675                           
  1676                           ;lcd.c: 126: lcd_goto(0x01);
  1677  000F9E  0E01               	movlw	1
  1678  000FA0  EC47  F009         	call	_lcd_goto
  1679                           
  1680                           ;lcd.c: 127: lcd_write(0xEF);
  1681  000FA4  0EEF               	movlw	239
  1682  000FA6  EC82  F008         	call	_lcd_write
  1683                           
  1684                           ;lcd.c: 128: lcd_goto(0x40);
  1685  000FAA  0E40               	movlw	64
  1686  000FAC  EC47  F009         	call	_lcd_goto
  1687                           
  1688                           ;lcd.c: 129: lcd_write(0xE1);
  1689  000FB0  0EE1               	movlw	225
  1690  000FB2  EC82  F008         	call	_lcd_write
  1691                           
  1692                           ;lcd.c: 130: lcd_goto(0x07);
  1693  000FB6  0E07               	movlw	7
  1694  000FB8  EC47  F009         	call	_lcd_goto
  1695                           
  1696                           ;lcd.c: 131: lcd_write(0xFF);
  1697  000FBC  0EFF               	movlw	255
  1698  000FBE  EC82  F008         	call	_lcd_write
  1699                           
  1700                           ;lcd.c: 132: lcd_goto(0x47);
  1701  000FC2  0E47               	movlw	71
  1702  000FC4  EC47  F009         	call	_lcd_goto
  1703                           
  1704                           ;lcd.c: 133: lcd_write(0xFF);
  1705  000FC8  0EFF               	movlw	255
  1706  000FCA  EC82  F008         	call	_lcd_write
  1707  000FCE  0012               	return	
  1708  000FD0                     __end_of_lcd_init:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           prodl	equ	0xFF3
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _lcd_writesc *****************
  1717 ;; Defined at:
  1718 ;;		line 70 in file "lcd.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1721 ;;		 -> STR_6(17), STR_5(17), STR_4(2), STR_3(2), 
  1722 ;;		 -> STR_2(2), STR_1(2), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;		None               void
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         2       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         2       0       0       0       0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    2
  1741 ;; This function calls:
  1742 ;;		_lcd_write
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;;		_lcd_init
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text5
  1750  00120A                     __ptext5:
  1751                           	opt stack 0
  1752  00120A                     _lcd_writesc:
  1753                           	opt stack 28
  1754                           
  1755                           ;incstack = 0
  1756  00120A  D00A               	goto	l831
  1757  00120C                     l827:
  1758                           
  1759                           ;lcd.c: 72: lcd_write(*s++);
  1760  00120C  C010  FFF6         	movff	lcd_writesc@s,tblptrl
  1761  001210  C011  FFF7         	movff	lcd_writesc@s+1,tblptrh
  1762  001214                     	if	0	;tblptru may be non-zero
  1763  001214                     	endif
  1764  001214                     	if	0	;tblptru may be non-zero
  1765  001214                     	endif
  1766  001214  0008               	tblrd		*
  1767  001216  50F5               	movf	tablat,w,c
  1768  001218  EC82  F008         	call	_lcd_write
  1769  00121C  4A10               	infsnz	lcd_writesc@s,f,c
  1770  00121E  2A11               	incf	lcd_writesc@s+1,f,c
  1771  001220                     l831:
  1772  001220  C010  FFF6         	movff	lcd_writesc@s,tblptrl
  1773  001224  C011  FFF7         	movff	lcd_writesc@s+1,tblptrh
  1774  001228                     	if	0	;tblptru may be non-zero
  1775  001228                     	endif
  1776  001228                     	if	0	;tblptru may be non-zero
  1777  001228                     	endif
  1778  001228  0008               	tblrd		*
  1779  00122A  50F5               	movf	tablat,w,c
  1780  00122C  0900               	iorlw	0
  1781  00122E  B4D8               	btfsc	status,2,c
  1782  001230  0012               	return	
  1783  001232  D7EC               	goto	l827
  1784  001234                     __end_of_lcd_writesc:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           prodl	equ	0xFF3
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _lcd_goto *****************
  1796 ;; Defined at:
  1797 ;;		line 84 in file "lcd.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  pos             1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  pos             1   15[COMRAM] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;		None               void
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1811 ;;      Params:         0       0       0       0       0       0       0
  1812 ;;      Locals:         1       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0
  1814 ;;      Totals:         1       0       0       0       0       0       0
  1815 ;;Total ram usage:        1 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    2
  1818 ;; This function calls:
  1819 ;;		_lcd_write
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;;		_printTime
  1823 ;;		_lcd_init
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text6
  1828  00128E                     __ptext6:
  1829                           	opt stack 0
  1830  00128E                     _lcd_goto:
  1831                           	opt stack 27
  1832                           
  1833                           ;incstack = 0
  1834                           ;lcd_goto@pos stored from wreg
  1835  00128E  6E10               	movwf	lcd_goto@pos,c
  1836  001290  948B               	bcf	3979,2,c	;volatile
  1837                           
  1838                           ;lcd.c: 86: lcd_write(0x80+pos);
  1839  001292  5010               	movf	lcd_goto@pos,w,c
  1840  001294  0F80               	addlw	128
  1841  001296  EC82  F008         	call	_lcd_write
  1842                           
  1843                           ;lcd.c: 87: LATCbits.LATC2=1;
  1844  00129A  848B               	bsf	3979,2,c	;volatile
  1845  00129C  0012               	return	
  1846  00129E                     __end_of_lcd_goto:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodl	equ	0xFF3
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _lcd_cmd *****************
  1858 ;; Defined at:
  1859 ;;		line 92 in file "lcd.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  command         1    wreg     unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  command         1   15[COMRAM] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;		None               void
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1873 ;;      Params:         0       0       0       0       0       0       0
  1874 ;;      Locals:         1       0       0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0
  1876 ;;      Totals:         1       0       0       0       0       0       0
  1877 ;;Total ram usage:        1 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    2
  1880 ;; This function calls:
  1881 ;;		_lcd_write
  1882 ;; This function is called by:
  1883 ;;		_lcd_init
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text7
  1888  0012AE                     __ptext7:
  1889                           	opt stack 0
  1890  0012AE                     _lcd_cmd:
  1891                           	opt stack 27
  1892                           
  1893                           ;incstack = 0
  1894                           ;lcd_cmd@command stored from wreg
  1895  0012AE  6E10               	movwf	lcd_cmd@command,c
  1896  0012B0  948B               	bcf	3979,2,c	;volatile
  1897                           
  1898                           ;lcd.c: 94: lcd_write(command);
  1899  0012B2  5010               	movf	lcd_cmd@command,w,c
  1900  0012B4  EC82  F008         	call	_lcd_write
  1901                           
  1902                           ;lcd.c: 95: LATCbits.LATC2=1;
  1903  0012B8  848B               	bsf	3979,2,c	;volatile
  1904  0012BA  0012               	return	
  1905  0012BC                     __end_of_lcd_cmd:
  1906                           	opt stack 0
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           prodl	equ	0xFF3
  1912                           postinc0	equ	0xFEE
  1913                           wreg	equ	0xFE8
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _lcd_clear *****************
  1917 ;; Defined at:
  1918 ;;		line 61 in file "lcd.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;		None               void
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         0       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0
  1934 ;;      Temps:          1       0       0       0       0       0       0
  1935 ;;      Totals:         1       0       0       0       0       0       0
  1936 ;;Total ram usage:        1 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    2
  1939 ;; This function calls:
  1940 ;;		_lcd_write
  1941 ;; This function is called by:
  1942 ;;		_lcd_init
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text8
  1947  00125E                     __ptext8:
  1948                           	opt stack 0
  1949  00125E                     _lcd_clear:
  1950                           	opt stack 27
  1951                           
  1952                           ;incstack = 0
  1953  00125E  948B               	bcf	3979,2,c	;volatile
  1954                           
  1955                           ;lcd.c: 63: lcd_write(0x01);
  1956  001260  0E01               	movlw	1
  1957  001262  EC82  F008         	call	_lcd_write
  1958                           
  1959                           ;lcd.c: 64: LATCbits.LATC2=1;
  1960  001266  848B               	bsf	3979,2,c	;volatile
  1961                           
  1962                           ;lcd.c: 65: _delay((unsigned long)((2)*(4000000/4000.0)));
  1963  001268  0E03               	movlw	3
  1964  00126A  6E10               	movwf	??_lcd_clear& (0+255),c
  1965  00126C  0E98               	movlw	152
  1966  00126E                     u857:
  1967  00126E  2EE8               	decfsz	wreg,f,c
  1968  001270  D7FE               	goto	u857
  1969  001272  2E10               	decfsz	??_lcd_clear& (0+255),f,c
  1970  001274  D7FC               	goto	u857
  1971  001276  0012               	return	
  1972  001278                     __end_of_lcd_clear:
  1973                           	opt stack 0
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           prodl	equ	0xFF3
  1979                           postinc0	equ	0xFEE
  1980                           wreg	equ	0xFE8
  1981                           status	equ	0xFD8
  1982                           
  1983 ;; *************** function _init *****************
  1984 ;; Defined at:
  1985 ;;		line 175 in file "main.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		wreg, status,2
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1999 ;;      Params:         0       0       0       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0
  2002 ;;      Totals:         0       0       0       0       0       0       0
  2003 ;;Total ram usage:        0 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text9
  2014  00116C                     __ptext9:
  2015                           	opt stack 0
  2016  00116C                     _init:
  2017                           	opt stack 29
  2018                           
  2019                           ;main.c: 177: ANSELA=0b00000000;
  2020                           
  2021                           ;incstack = 0
  2022  00116C  0E00               	movlw	0
  2023  00116E  010F               	movlb	15	; () banked
  2024  001170  6F38               	movwf	56,b	;volatile
  2025                           
  2026                           ;main.c: 178: ANSELB=0b00000011;
  2027  001172  0E03               	movlw	3
  2028  001174  010F               	movlb	15	; () banked
  2029  001176  6F39               	movwf	57,b	;volatile
  2030                           
  2031                           ;main.c: 179: ANSELC=0b00000000;
  2032  001178  0E00               	movlw	0
  2033  00117A  010F               	movlb	15	; () banked
  2034  00117C  6F3A               	movwf	58,b	;volatile
  2035                           
  2036                           ;main.c: 180: TRISA=0b00000000;
  2037  00117E  0E00               	movlw	0
  2038  001180  6E92               	movwf	3986,c	;volatile
  2039                           
  2040                           ;main.c: 181: TRISB=0b11000011;
  2041  001182  0EC3               	movlw	195
  2042  001184  6E93               	movwf	3987,c	;volatile
  2043                           
  2044                           ;main.c: 182: TRISC=0b00100010;
  2045  001186  0E22               	movlw	34
  2046  001188  6E94               	movwf	3988,c	;volatile
  2047                           
  2048                           ; BSR set to: 15
  2049                           ;main.c: 183: TRISAbits.TRISA4=0;
  2050  00118A  9892               	bcf	3986,4,c	;volatile
  2051                           
  2052                           ;main.c: 184: CCP5CON=0b00001100;
  2053  00118C  0E0C               	movlw	12
  2054  00118E  010F               	movlb	15	; () banked
  2055  001190  6F54               	movwf	84,b	;volatile
  2056                           
  2057                           ;main.c: 185: CCPTMRS1=0b00000001;
  2058  001192  0E01               	movlw	1
  2059  001194  010F               	movlb	15	; () banked
  2060  001196  6F48               	movwf	72,b	;volatile
  2061                           
  2062                           ; BSR set to: 15
  2063                           ;main.c: 186: PR2=0xFF;
  2064  001198  68BB               	setf	4027,c	;volatile
  2065                           
  2066                           ;main.c: 187: T2CON=0x04;
  2067  00119A  0E04               	movlw	4
  2068  00119C  6EBA               	movwf	4026,c	;volatile
  2069                           
  2070                           ;main.c: 188: T1CON=0x1;
  2071  00119E  0E01               	movlw	1
  2072  0011A0  6ECD               	movwf	4045,c	;volatile
  2073                           
  2074                           ;main.c: 189: TMR1H=0x3D;
  2075  0011A2  0E3D               	movlw	61
  2076  0011A4  6ECF               	movwf	4047,c	;volatile
  2077                           
  2078                           ;main.c: 190: TMR1L=0x1D;
  2079  0011A6  0E1D               	movlw	29
  2080  0011A8  6ECE               	movwf	4046,c	;volatile
  2081                           
  2082                           ;main.c: 191: PIE1=0x1;
  2083  0011AA  0E01               	movlw	1
  2084  0011AC  6E9D               	movwf	3997,c	;volatile
  2085                           
  2086                           ;main.c: 192: IPR1=0x1;
  2087  0011AE  0E01               	movlw	1
  2088  0011B0  6E9F               	movwf	3999,c	;volatile
  2089                           
  2090                           ;main.c: 193: INTCON=0xC0;
  2091  0011B2  0EC0               	movlw	192
  2092  0011B4  6EF2               	movwf	intcon,c	;volatile
  2093                           
  2094                           ;main.c: 194: ADCON0=0b0101001;
  2095  0011B6  0E29               	movlw	41
  2096  0011B8  6EC2               	movwf	4034,c	;volatile
  2097                           
  2098                           ;main.c: 195: ADCON1=0b00000000;
  2099  0011BA  0E00               	movlw	0
  2100  0011BC  6EC1               	movwf	4033,c	;volatile
  2101                           
  2102                           ;main.c: 196: ADCON2=0b10100100;
  2103  0011BE  0EA4               	movlw	164
  2104  0011C0  6EC0               	movwf	4032,c	;volatile
  2105                           
  2106                           ; BSR set to: 15
  2107  0011C2  0012               	return	
  2108  0011C4                     __end_of_init:
  2109                           	opt stack 0
  2110                           tblptru	equ	0xFF8
  2111                           tblptrh	equ	0xFF7
  2112                           tblptrl	equ	0xFF6
  2113                           tablat	equ	0xFF5
  2114                           prodl	equ	0xFF3
  2115                           intcon	equ	0xFF2
  2116                           postinc0	equ	0xFEE
  2117                           wreg	equ	0xFE8
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _create_char *****************
  2121 ;; Defined at:
  2122 ;;		line 200 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  i               2   22[COMRAM] int 
  2127 ;;  i               2   20[COMRAM] int 
  2128 ;;  i               2   18[COMRAM] int 
  2129 ;;  i               2   16[COMRAM] int 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;		None               void
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2139 ;;      Params:         0       0       0       0       0       0       0
  2140 ;;      Locals:         8       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0
  2142 ;;      Totals:         8       0       0       0       0       0       0
  2143 ;;Total ram usage:        8 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    3
  2146 ;; This function calls:
  2147 ;;		_lcd_char
  2148 ;;		_lcd_write
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text10
  2155  000986                     __ptext10:
  2156                           	opt stack 0
  2157  000986                     _create_char:
  2158                           	opt stack 27
  2159                           
  2160                           ;main.c: 202: lcd_char(0x00);
  2161                           
  2162                           ; BSR set to: 15
  2163                           ;incstack = 0
  2164  000986  0E00               	movlw	0
  2165  000988  EC4F  F009         	call	_lcd_char
  2166                           
  2167                           ;main.c: 203: lcd_write(0b01110);
  2168  00098C  0E0E               	movlw	14
  2169  00098E  EC82  F008         	call	_lcd_write
  2170                           
  2171                           ;main.c: 204: for(int i=1; i<=7; i++){
  2172  000992  0E00               	movlw	0
  2173  000994  6E12               	movwf	create_char@i+1,c
  2174  000996  0E01               	movlw	1
  2175  000998  6E11               	movwf	create_char@i,c
  2176  00099A  5012               	movf	create_char@i+1,w,c
  2177  00099C  0A80               	xorlw	128
  2178  00099E  0F80               	addlw	-128
  2179  0009A0  0E08               	movlw	8
  2180  0009A2  B4D8               	btfsc	status,2,c
  2181  0009A4  5C11               	subwf	create_char@i,w,c
  2182  0009A6  B0D8               	btfsc	status,0,c
  2183  0009A8  D009               	goto	l1057
  2184                           
  2185                           ;main.c: 205: lcd_char(0x00+i);
  2186  0009AA  5011               	movf	create_char@i,w,c
  2187  0009AC  EC4F  F009         	call	_lcd_char
  2188                           
  2189                           ;main.c: 206: lcd_write(0b11111);
  2190  0009B0  0E1F               	movlw	31
  2191  0009B2  EC82  F008         	call	_lcd_write
  2192  0009B6  4A11               	infsnz	create_char@i,f,c
  2193  0009B8  2A12               	incf	create_char@i+1,f,c
  2194  0009BA  D7EF               	goto	L5
  2195  0009BC                     l1057:
  2196                           
  2197                           ;main.c: 207: }
  2198                           ;main.c: 210: lcd_char(0x08);
  2199  0009BC  0E08               	movlw	8
  2200  0009BE  EC4F  F009         	call	_lcd_char
  2201                           
  2202                           ;main.c: 211: lcd_write(0b01110);
  2203  0009C2  0E0E               	movlw	14
  2204  0009C4  EC82  F008         	call	_lcd_write
  2205                           
  2206                           ;main.c: 212: for(int i=1; i<6; i++){
  2207  0009C8  0E00               	movlw	0
  2208  0009CA  6E14               	movwf	create_char@i_611+1,c
  2209  0009CC  0E01               	movlw	1
  2210  0009CE  6E13               	movwf	create_char@i_611,c
  2211  0009D0  5014               	movf	create_char@i_611+1,w,c
  2212  0009D2  0A80               	xorlw	128
  2213  0009D4  0F80               	addlw	-128
  2214  0009D6  0E06               	movlw	6
  2215  0009D8  B4D8               	btfsc	status,2,c
  2216  0009DA  5C13               	subwf	create_char@i_611,w,c
  2217  0009DC  B0D8               	btfsc	status,0,c
  2218  0009DE  D00A               	goto	l1073
  2219                           
  2220                           ;main.c: 213: lcd_char(0x08+i);
  2221  0009E0  5013               	movf	create_char@i_611,w,c
  2222  0009E2  0F08               	addlw	8
  2223  0009E4  EC4F  F009         	call	_lcd_char
  2224                           
  2225                           ;main.c: 214: lcd_write(0b10001);
  2226  0009E8  0E11               	movlw	17
  2227  0009EA  EC82  F008         	call	_lcd_write
  2228  0009EE  4A13               	infsnz	create_char@i_611,f,c
  2229  0009F0  2A14               	incf	create_char@i_611+1,f,c
  2230  0009F2  D7EE               	goto	L6
  2231  0009F4                     l1073:
  2232                           
  2233                           ;main.c: 215: }
  2234                           ;main.c: 216: for(int i=6; i<8; i++){
  2235  0009F4  0E00               	movlw	0
  2236  0009F6  6E16               	movwf	create_char@i_612+1,c
  2237  0009F8  0E06               	movlw	6
  2238  0009FA  6E15               	movwf	create_char@i_612,c
  2239  0009FC  5016               	movf	create_char@i_612+1,w,c
  2240  0009FE  0A80               	xorlw	128
  2241  000A00  0F80               	addlw	-128
  2242  000A02  0E08               	movlw	8
  2243  000A04  B4D8               	btfsc	status,2,c
  2244  000A06  5C15               	subwf	create_char@i_612,w,c
  2245  000A08  B0D8               	btfsc	status,0,c
  2246  000A0A  D00A               	goto	l1087
  2247                           
  2248                           ;main.c: 217: lcd_char(0x08+i);
  2249  000A0C  5015               	movf	create_char@i_612,w,c
  2250  000A0E  0F08               	addlw	8
  2251  000A10  EC4F  F009         	call	_lcd_char
  2252                           
  2253                           ;main.c: 218: lcd_write(0b11111);
  2254  000A14  0E1F               	movlw	31
  2255  000A16  EC82  F008         	call	_lcd_write
  2256  000A1A  4A15               	infsnz	create_char@i_612,f,c
  2257  000A1C  2A16               	incf	create_char@i_612+1,f,c
  2258  000A1E  D7EE               	goto	L7
  2259  000A20                     l1087:
  2260                           
  2261                           ;main.c: 219: }
  2262                           ;main.c: 222: lcd_char(0x10);
  2263  000A20  0E10               	movlw	16
  2264  000A22  EC4F  F009         	call	_lcd_char
  2265                           
  2266                           ;main.c: 223: lcd_write(0b01110);
  2267  000A26  0E0E               	movlw	14
  2268  000A28  EC82  F008         	call	_lcd_write
  2269                           
  2270                           ;main.c: 224: for(int i=1; i<7; i++){
  2271  000A2C  0E00               	movlw	0
  2272  000A2E  6E18               	movwf	create_char@i_613+1,c
  2273  000A30  0E01               	movlw	1
  2274  000A32  6E17               	movwf	create_char@i_613,c
  2275  000A34  5018               	movf	create_char@i_613+1,w,c
  2276  000A36  0A80               	xorlw	128
  2277  000A38  0F80               	addlw	-128
  2278  000A3A  0E07               	movlw	7
  2279  000A3C  B4D8               	btfsc	status,2,c
  2280  000A3E  5C17               	subwf	create_char@i_613,w,c
  2281  000A40  B0D8               	btfsc	status,0,c
  2282  000A42  D00A               	goto	l1103
  2283                           
  2284                           ;main.c: 225: lcd_char(0x10+i);
  2285  000A44  5017               	movf	create_char@i_613,w,c
  2286  000A46  0F10               	addlw	16
  2287  000A48  EC4F  F009         	call	_lcd_char
  2288                           
  2289                           ;main.c: 226: lcd_write(0b10001);
  2290  000A4C  0E11               	movlw	17
  2291  000A4E  EC82  F008         	call	_lcd_write
  2292  000A52  4A17               	infsnz	create_char@i_613,f,c
  2293  000A54  2A18               	incf	create_char@i_613+1,f,c
  2294  000A56  D7EE               	goto	L8
  2295  000A58                     l1103:
  2296                           
  2297                           ;main.c: 227: }
  2298                           ;main.c: 228: lcd_char(0x17);
  2299  000A58  0E17               	movlw	23
  2300  000A5A  EC4F  F009         	call	_lcd_char
  2301                           
  2302                           ;main.c: 229: lcd_write(0b11111);
  2303  000A5E  0E1F               	movlw	31
  2304  000A60  EC82  F008         	call	_lcd_write
  2305                           
  2306                           ;main.c: 233: lcd_char(0x18);
  2307  000A64  0E18               	movlw	24
  2308  000A66  EC4F  F009         	call	_lcd_char
  2309                           
  2310                           ;main.c: 234: lcd_write(0x00);
  2311  000A6A  0E00               	movlw	0
  2312  000A6C  EC82  F008         	call	_lcd_write
  2313                           
  2314                           ;main.c: 235: lcd_char(0x19);
  2315  000A70  0E19               	movlw	25
  2316  000A72  EC4F  F009         	call	_lcd_char
  2317                           
  2318                           ;main.c: 236: lcd_write(0x00);
  2319  000A76  0E00               	movlw	0
  2320  000A78  EC82  F008         	call	_lcd_write
  2321                           
  2322                           ;main.c: 237: lcd_char(0x1A);
  2323  000A7C  0E1A               	movlw	26
  2324  000A7E  EC4F  F009         	call	_lcd_char
  2325                           
  2326                           ;main.c: 238: lcd_write(0b00011);
  2327  000A82  0E03               	movlw	3
  2328  000A84  EC82  F008         	call	_lcd_write
  2329                           
  2330                           ;main.c: 239: lcd_char(0x1B);
  2331  000A88  0E1B               	movlw	27
  2332  000A8A  EC4F  F009         	call	_lcd_char
  2333                           
  2334                           ;main.c: 240: lcd_write(0b00110);
  2335  000A8E  0E06               	movlw	6
  2336  000A90  EC82  F008         	call	_lcd_write
  2337                           
  2338                           ;main.c: 241: lcd_char(0x1C);
  2339  000A94  0E1C               	movlw	28
  2340  000A96  EC4F  F009         	call	_lcd_char
  2341                           
  2342                           ;main.c: 242: lcd_write(0b01100);
  2343  000A9A  0E0C               	movlw	12
  2344  000A9C  EC82  F008         	call	_lcd_write
  2345                           
  2346                           ;main.c: 243: lcd_char(0x1D);
  2347  000AA0  0E1D               	movlw	29
  2348  000AA2  EC4F  F009         	call	_lcd_char
  2349                           
  2350                           ;main.c: 244: lcd_write(0b11000);
  2351  000AA6  0E18               	movlw	24
  2352  000AA8  EC82  F008         	call	_lcd_write
  2353                           
  2354                           ;main.c: 245: lcd_char(0x1E);
  2355  000AAC  0E1E               	movlw	30
  2356  000AAE  EC4F  F009         	call	_lcd_char
  2357                           
  2358                           ;main.c: 246: lcd_write(0x00);
  2359  000AB2  0E00               	movlw	0
  2360  000AB4  EC82  F008         	call	_lcd_write
  2361                           
  2362                           ;main.c: 247: lcd_char(0x1F);
  2363  000AB8  0E1F               	movlw	31
  2364  000ABA  EC4F  F009         	call	_lcd_char
  2365                           
  2366                           ;main.c: 248: lcd_write(0x00);
  2367  000ABE  0E00               	movlw	0
  2368  000AC0  EC82  F008         	call	_lcd_write
  2369  000AC4  0012               	return	
  2370  000AC6                     __end_of_create_char:
  2371                           	opt stack 0
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           prodl	equ	0xFF3
  2377                           intcon	equ	0xFF2
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _lcd_char *****************
  2383 ;; Defined at:
  2384 ;;		line 53 in file "lcd.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  cgram_addr      1    wreg     unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  cgram_addr      1   15[COMRAM] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;		None               void
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2398 ;;      Params:         0       0       0       0       0       0       0
  2399 ;;      Locals:         1       0       0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0
  2401 ;;      Totals:         1       0       0       0       0       0       0
  2402 ;;Total ram usage:        1 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    2
  2405 ;; This function calls:
  2406 ;;		_lcd_write
  2407 ;; This function is called by:
  2408 ;;		_create_char
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text11
  2413  00129E                     __ptext11:
  2414                           	opt stack 0
  2415  00129E                     _lcd_char:
  2416                           	opt stack 27
  2417                           
  2418                           ;incstack = 0
  2419                           ;lcd_char@cgram_addr stored from wreg
  2420  00129E  6E10               	movwf	lcd_char@cgram_addr,c
  2421                           
  2422                           ;lcd.c: 54: LATCbits.LATC2 = 0;
  2423  0012A0  948B               	bcf	3979,2,c	;volatile
  2424                           
  2425                           ;lcd.c: 55: lcd_write(0x40+cgram_addr);
  2426  0012A2  5010               	movf	lcd_char@cgram_addr,w,c
  2427  0012A4  0F40               	addlw	64
  2428  0012A6  EC82  F008         	call	_lcd_write
  2429                           
  2430                           ;lcd.c: 56: LATCbits.LATC2=1;
  2431  0012AA  848B               	bsf	3979,2,c	;volatile
  2432  0012AC  0012               	return	
  2433  0012AE                     __end_of_lcd_char:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodl	equ	0xFF3
  2440                           intcon	equ	0xFF2
  2441                           postinc0	equ	0xFEE
  2442                           wreg	equ	0xFE8
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _lcd_write *****************
  2446 ;; Defined at:
  2447 ;;		line 40 in file "lcd.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  c               1    wreg     unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  c               1   14[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;		None               void
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2461 ;;      Params:         0       0       0       0       0       0       0
  2462 ;;      Locals:         1       0       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0
  2464 ;;      Totals:         1       0       0       0       0       0       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;;		_create_char
  2473 ;;		_printTime
  2474 ;;		_lcd_char
  2475 ;;		_lcd_clear
  2476 ;;		_lcd_writesc
  2477 ;;		_lcd_goto
  2478 ;;		_lcd_cmd
  2479 ;;		_lcd_init
  2480 ;;		_lcd_writesv
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text12
  2485  001104                     __ptext12:
  2486                           	opt stack 0
  2487  001104                     _lcd_write:
  2488                           	opt stack 28
  2489                           
  2490                           ;incstack = 0
  2491                           ;lcd_write@c stored from wreg
  2492  001104  6E0F               	movwf	lcd_write@c,c
  2493  001106  AE0F               	btfss	lcd_write@c,7,c
  2494  001108  D002               	goto	l158
  2495  00110A  8A8A               	bsf	3978,5,c	;volatile
  2496  00110C  D001               	goto	l789
  2497  00110E                     l158:
  2498  00110E  9A8A               	bcf	3978,5,c	;volatile
  2499  001110                     l789:
  2500                           
  2501                           ;lcd.c: 42: if(c & 0x40) LATBbits.LATB4=1; else LATBbits.LATB4=0;
  2502  001110  AC0F               	btfss	lcd_write@c,6,c
  2503  001112  D002               	goto	l160
  2504  001114  888A               	bsf	3978,4,c	;volatile
  2505  001116  D001               	goto	l793
  2506  001118                     l160:
  2507  001118  988A               	bcf	3978,4,c	;volatile
  2508  00111A                     l793:
  2509                           
  2510                           ;lcd.c: 43: if(c & 0x20) LATBbits.LATB3=1; else LATBbits.LATB3=0;
  2511  00111A  AA0F               	btfss	lcd_write@c,5,c
  2512  00111C  D002               	goto	l162
  2513  00111E  868A               	bsf	3978,3,c	;volatile
  2514  001120  D001               	goto	l797
  2515  001122                     l162:
  2516  001122  968A               	bcf	3978,3,c	;volatile
  2517  001124                     l797:
  2518                           
  2519                           ;lcd.c: 44: if(c & 0x10) LATBbits.LATB2=1; else LATBbits.LATB2=0;
  2520  001124  A80F               	btfss	lcd_write@c,4,c
  2521  001126  D002               	goto	l164
  2522  001128  848A               	bsf	3978,2,c	;volatile
  2523  00112A  D001               	goto	l165
  2524  00112C                     l164:
  2525  00112C  948A               	bcf	3978,2,c	;volatile
  2526  00112E                     l165:
  2527                           
  2528                           ;lcd.c: 45: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbit
      +                          s.LATC3=0;};
  2529  00112E  868B               	bsf	3979,3,c	;volatile
  2530  001130  F000               	nop	
  2531  001132  968B               	bcf	3979,3,c	;volatile
  2532                           
  2533                           ;lcd.c: 46: if(c & 0x08) LATBbits.LATB5=1; else LATBbits.LATB5=0;
  2534  001134  A60F               	btfss	lcd_write@c,3,c
  2535  001136  D002               	goto	l166
  2536  001138  8A8A               	bsf	3978,5,c	;volatile
  2537  00113A  D001               	goto	l805
  2538  00113C                     l166:
  2539  00113C  9A8A               	bcf	3978,5,c	;volatile
  2540  00113E                     l805:
  2541                           
  2542                           ;lcd.c: 47: if(c & 0x04) LATBbits.LATB4=1; else LATBbits.LATB4=0;
  2543  00113E  A40F               	btfss	lcd_write@c,2,c
  2544  001140  D002               	goto	l168
  2545  001142  888A               	bsf	3978,4,c	;volatile
  2546  001144  D001               	goto	l809
  2547  001146                     l168:
  2548  001146  988A               	bcf	3978,4,c	;volatile
  2549  001148                     l809:
  2550                           
  2551                           ;lcd.c: 48: if(c & 0x02) LATBbits.LATB3=1; else LATBbits.LATB3=0;
  2552  001148  A20F               	btfss	lcd_write@c,1,c
  2553  00114A  D002               	goto	l170
  2554  00114C  868A               	bsf	3978,3,c	;volatile
  2555  00114E  D001               	goto	l813
  2556  001150                     l170:
  2557  001150  968A               	bcf	3978,3,c	;volatile
  2558  001152                     l813:
  2559                           
  2560                           ;lcd.c: 49: if(c & 0x01) LATBbits.LATB2=1; else LATBbits.LATB2=0;
  2561  001152  A00F               	btfss	lcd_write@c,0,c
  2562  001154  D002               	goto	l172
  2563  001156  848A               	bsf	3978,2,c	;volatile
  2564  001158  D001               	goto	l173
  2565  00115A                     l172:
  2566  00115A  948A               	bcf	3978,2,c	;volatile
  2567  00115C                     l173:
  2568                           
  2569                           ;lcd.c: 50: {LATCbits.LATC3=1; _delay((unsigned long)((1)*(4000000/4000000.0))); LATCbit
      +                          s.LATC3=0;};
  2570  00115C  868B               	bsf	3979,3,c	;volatile
  2571  00115E  F000               	nop	
  2572  001160  968B               	bcf	3979,3,c	;volatile
  2573                           
  2574                           ;lcd.c: 51: _delay((unsigned long)((50)*(4000000/4000000.0)));
  2575  001162  0E10               	movlw	16
  2576  001164                     u867:
  2577  001164  2EE8               	decfsz	wreg,f,c
  2578  001166  D7FE               	goto	u867
  2579  001168  D000               	nop2		;nop
  2580  00116A  0012               	return	
  2581  00116C                     __end_of_lcd_write:
  2582                           	opt stack 0
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           prodl	equ	0xFF3
  2588                           intcon	equ	0xFF2
  2589                           postinc0	equ	0xFEE
  2590                           wreg	equ	0xFE8
  2591                           status	equ	0xFD8
  2592                           
  2593 ;; *************** function ___lwtofl *****************
  2594 ;; Defined at:
  2595 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtofl.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  c               2   24[COMRAM] unsigned int 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  4   24[COMRAM] unsigned int 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2609 ;;      Params:         4       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0
  2612 ;;      Totals:         4       0       0       0       0       0       0
  2613 ;;Total ram usage:        4 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    2
  2616 ;; This function calls:
  2617 ;;		___flpack
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text13
  2624  001234                     __ptext13:
  2625                           	opt stack 0
  2626  001234                     ___lwtofl:
  2627                           	opt stack 28
  2628                           
  2629                           ;incstack = 0
  2630  001234  C019  F00F         	movff	___lwtofl@c,___flpack@arg
  2631  001238  C01A  F010         	movff	___lwtofl@c+1,___flpack@arg+1
  2632  00123C  6A11               	clrf	___flpack@arg+2,c
  2633  00123E  6A12               	clrf	___flpack@arg+3,c
  2634  001240  0E96               	movlw	150
  2635  001242  6E13               	movwf	___flpack@exp,c
  2636  001244  0E00               	movlw	0
  2637  001246  6E14               	movwf	___flpack@sign,c
  2638  001248  EC00  F007         	call	___flpack	;wreg free
  2639  00124C  C00F  F019         	movff	?___flpack,?___lwtofl
  2640  001250  C010  F01A         	movff	?___flpack+1,?___lwtofl+1
  2641  001254  C011  F01B         	movff	?___flpack+2,?___lwtofl+2
  2642  001258  C012  F01C         	movff	?___flpack+3,?___lwtofl+3
  2643  00125C  0012               	return	
  2644  00125E                     __end_of___lwtofl:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodl	equ	0xFF3
  2651                           intcon	equ	0xFF2
  2652                           postinc0	equ	0xFEE
  2653                           wreg	equ	0xFE8
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function ___fltol *****************
  2657 ;; Defined at:
  2658 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fltol.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  f1              4   47[COMRAM] unsigned int 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  exp1            1   56[COMRAM] unsigned char 
  2663 ;;  sign1           1   55[COMRAM] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  4   47[COMRAM] long 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2673 ;;      Params:         4       0       0       0       0       0       0
  2674 ;;      Locals:         2       0       0       0       0       0       0
  2675 ;;      Temps:          4       0       0       0       0       0       0
  2676 ;;      Totals:        10       0       0       0       0       0       0
  2677 ;;Total ram usage:       10 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text14
  2688  000D02                     __ptext14:
  2689                           	opt stack 0
  2690  000D02                     ___fltol:
  2691                           	opt stack 29
  2692                           
  2693                           ;incstack = 0
  2694  000D02  C030  F034         	movff	___fltol@f1,??___fltol
  2695  000D06  C031  F035         	movff	___fltol@f1+1,??___fltol+1
  2696  000D0A  C032  F036         	movff	___fltol@f1+2,??___fltol+2
  2697  000D0E  C033  F037         	movff	___fltol@f1+3,??___fltol+3
  2698  000D12  0E18               	movlw	24
  2699  000D14  D005               	goto	u460
  2700  000D16                     u465:
  2701  000D16  90D8               	bcf	status,0,c
  2702  000D18  3237               	rrcf	??___fltol+3,f,c
  2703  000D1A  3236               	rrcf	??___fltol+2,f,c
  2704  000D1C  3235               	rrcf	??___fltol+1,f,c
  2705  000D1E  3234               	rrcf	??___fltol,f,c
  2706  000D20                     u460:
  2707  000D20  2EE8               	decfsz	wreg,f,c
  2708  000D22  D7F9               	goto	u465
  2709  000D24  5034               	movf	??___fltol,w,c
  2710  000D26  6E39               	movwf	___fltol@exp1,c
  2711  000D28  6639               	tstfsz	___fltol@exp1& (0+255),c
  2712  000D2A  D009               	goto	l1229
  2713  000D2C  0E00               	movlw	0
  2714  000D2E  6E30               	movwf	?___fltol,c
  2715  000D30  0E00               	movlw	0
  2716  000D32  6E31               	movwf	?___fltol+1,c
  2717  000D34  0E00               	movlw	0
  2718  000D36  6E32               	movwf	?___fltol+2,c
  2719  000D38  0E00               	movlw	0
  2720  000D3A  6E33               	movwf	?___fltol+3,c
  2721  000D3C  0012               	return	
  2722  000D3E                     l1229:
  2723  000D3E  C030  F034         	movff	___fltol@f1,??___fltol
  2724  000D42  C031  F035         	movff	___fltol@f1+1,??___fltol+1
  2725  000D46  C032  F036         	movff	___fltol@f1+2,??___fltol+2
  2726  000D4A  C033  F037         	movff	___fltol@f1+3,??___fltol+3
  2727  000D4E  0E20               	movlw	32
  2728  000D50  D005               	goto	u480
  2729  000D52                     u485:
  2730  000D52  90D8               	bcf	status,0,c
  2731  000D54  3237               	rrcf	??___fltol+3,f,c
  2732  000D56  3236               	rrcf	??___fltol+2,f,c
  2733  000D58  3235               	rrcf	??___fltol+1,f,c
  2734  000D5A  3234               	rrcf	??___fltol,f,c
  2735  000D5C                     u480:
  2736  000D5C  2EE8               	decfsz	wreg,f,c
  2737  000D5E  D7F9               	goto	u485
  2738  000D60  5034               	movf	??___fltol,w,c
  2739  000D62  6E38               	movwf	___fltol@sign1,c
  2740  000D64  8E32               	bsf	___fltol@f1+2,7,c
  2741  000D66  0EFF               	movlw	255
  2742  000D68  1630               	andwf	___fltol@f1,f,c
  2743  000D6A  0EFF               	movlw	255
  2744  000D6C  1631               	andwf	___fltol@f1+1,f,c
  2745  000D6E  0EFF               	movlw	255
  2746  000D70  1632               	andwf	___fltol@f1+2,f,c
  2747  000D72  0E00               	movlw	0
  2748  000D74  1633               	andwf	___fltol@f1+3,f,c
  2749  000D76  0E96               	movlw	150
  2750  000D78  5E39               	subwf	___fltol@exp1,f,c
  2751  000D7A  AE39               	btfss	___fltol@exp1,7,c
  2752  000D7C  D019               	goto	l1249
  2753  000D7E  5039               	movf	___fltol@exp1,w,c
  2754  000D80  0A80               	xorlw	128
  2755  000D82  6E34               	movwf	??___fltol& (0+255),c
  2756  000D84  0EE9               	movlw	233
  2757  000D86  0A80               	xorlw	128
  2758  000D88  5C34               	subwf	??___fltol,w,c
  2759  000D8A  B0D8               	btfsc	status,0,c
  2760  000D8C  D009               	goto	l1245
  2761  000D8E  0E00               	movlw	0
  2762  000D90  6E30               	movwf	?___fltol,c
  2763  000D92  0E00               	movlw	0
  2764  000D94  6E31               	movwf	?___fltol+1,c
  2765  000D96  0E00               	movlw	0
  2766  000D98  6E32               	movwf	?___fltol+2,c
  2767  000D9A  0E00               	movlw	0
  2768  000D9C  6E33               	movwf	?___fltol+3,c
  2769  000D9E  0012               	return	
  2770  000DA0                     l1245:
  2771  000DA0  90D8               	bcf	status,0,c
  2772  000DA2  3233               	rrcf	___fltol@f1+3,f,c
  2773  000DA4  3232               	rrcf	___fltol@f1+2,f,c
  2774  000DA6  3231               	rrcf	___fltol@f1+1,f,c
  2775  000DA8  3230               	rrcf	___fltol@f1,f,c
  2776  000DAA  3E39               	incfsz	___fltol@exp1,f,c
  2777  000DAC  D7F9               	goto	l1245
  2778  000DAE  D014               	goto	l1259
  2779  000DB0                     l1249:
  2780  000DB0  0E1F               	movlw	31
  2781  000DB2  6439               	cpfsgt	___fltol@exp1,c
  2782  000DB4  D00F               	goto	l1257
  2783  000DB6  0E00               	movlw	0
  2784  000DB8  6E30               	movwf	?___fltol,c
  2785  000DBA  0E00               	movlw	0
  2786  000DBC  6E31               	movwf	?___fltol+1,c
  2787  000DBE  0E00               	movlw	0
  2788  000DC0  6E32               	movwf	?___fltol+2,c
  2789  000DC2  0E00               	movlw	0
  2790  000DC4  6E33               	movwf	?___fltol+3,c
  2791  000DC6  0012               	return	
  2792  000DC8                     l1255:
  2793  000DC8  90D8               	bcf	status,0,c
  2794  000DCA  3630               	rlcf	___fltol@f1,f,c
  2795  000DCC  3631               	rlcf	___fltol@f1+1,f,c
  2796  000DCE  3632               	rlcf	___fltol@f1+2,f,c
  2797  000DD0  3633               	rlcf	___fltol@f1+3,f,c
  2798  000DD2  0639               	decf	___fltol@exp1,f,c
  2799  000DD4                     l1257:
  2800  000DD4  6639               	tstfsz	___fltol@exp1,c
  2801  000DD6  D7F8               	goto	l1255
  2802  000DD8                     l1259:
  2803  000DD8  5038               	movf	___fltol@sign1,w,c
  2804  000DDA  B4D8               	btfsc	status,2,c
  2805  000DDC  D008               	goto	l1263
  2806  000DDE  1E33               	comf	___fltol@f1+3,f,c
  2807  000DE0  1E32               	comf	___fltol@f1+2,f,c
  2808  000DE2  1E31               	comf	___fltol@f1+1,f,c
  2809  000DE4  6C30               	negf	___fltol@f1,c
  2810  000DE6  0E00               	movlw	0
  2811  000DE8  2231               	addwfc	___fltol@f1+1,f,c
  2812  000DEA  2232               	addwfc	___fltol@f1+2,f,c
  2813  000DEC  2233               	addwfc	___fltol@f1+3,f,c
  2814  000DEE                     l1263:
  2815  000DEE  C030  F030         	movff	___fltol@f1,?___fltol
  2816  000DF2  C031  F031         	movff	___fltol@f1+1,?___fltol+1
  2817  000DF6  C032  F032         	movff	___fltol@f1+2,?___fltol+2
  2818  000DFA  C033  F033         	movff	___fltol@f1+3,?___fltol+3
  2819  000DFE  0012               	return	
  2820  000E00                     __end_of___fltol:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodl	equ	0xFF3
  2827                           intcon	equ	0xFF2
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function ___fldiv *****************
  2833 ;; Defined at:
  2834 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldiv.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  f1              4   28[COMRAM] long 
  2837 ;;  f2              4   32[COMRAM] long 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  f3              4   40[COMRAM] long 
  2840 ;;  sign            1   46[COMRAM] unsigned char 
  2841 ;;  exp             1   45[COMRAM] unsigned char 
  2842 ;;  cntr            1   44[COMRAM] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  4   28[COMRAM] unsigned char 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         8       0       0       0       0       0       0
  2853 ;;      Locals:         7       0       0       0       0       0       0
  2854 ;;      Temps:          4       0       0       0       0       0       0
  2855 ;;      Totals:        19       0       0       0       0       0       0
  2856 ;;Total ram usage:       19 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    2
  2859 ;; This function calls:
  2860 ;;		___flpack
  2861 ;; This function is called by:
  2862 ;;		_main
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text15
  2867  000BE4                     __ptext15:
  2868                           	opt stack 0
  2869  000BE4                     ___fldiv:
  2870                           	opt stack 28
  2871                           
  2872                           ;incstack = 0
  2873  000BE4  C01D  F025         	movff	___fldiv@f1,??___fldiv
  2874  000BE8  C01E  F026         	movff	___fldiv@f1+1,??___fldiv+1
  2875  000BEC  C01F  F027         	movff	___fldiv@f1+2,??___fldiv+2
  2876  000BF0  C020  F028         	movff	___fldiv@f1+3,??___fldiv+3
  2877  000BF4  0E18               	movlw	24
  2878  000BF6  D005               	goto	u410
  2879  000BF8                     u415:
  2880  000BF8  90D8               	bcf	status,0,c
  2881  000BFA  3228               	rrcf	??___fldiv+3,f,c
  2882  000BFC  3227               	rrcf	??___fldiv+2,f,c
  2883  000BFE  3226               	rrcf	??___fldiv+1,f,c
  2884  000C00  3225               	rrcf	??___fldiv,f,c
  2885  000C02                     u410:
  2886  000C02  2EE8               	decfsz	wreg,f,c
  2887  000C04  D7F9               	goto	u415
  2888  000C06  5025               	movf	??___fldiv,w,c
  2889  000C08  6E2E               	movwf	___fldiv@exp,c
  2890  000C0A  662E               	tstfsz	___fldiv@exp& (0+255),c
  2891  000C0C  D009               	goto	l1189
  2892  000C0E  0E00               	movlw	0
  2893  000C10  6E1D               	movwf	?___fldiv,c
  2894  000C12  0E00               	movlw	0
  2895  000C14  6E1E               	movwf	?___fldiv+1,c
  2896  000C16  0E00               	movlw	0
  2897  000C18  6E1F               	movwf	?___fldiv+2,c
  2898  000C1A  0E00               	movlw	0
  2899  000C1C  6E20               	movwf	?___fldiv+3,c
  2900  000C1E  0012               	return	
  2901  000C20                     l1189:
  2902  000C20  C021  F025         	movff	___fldiv@f2,??___fldiv
  2903  000C24  C022  F026         	movff	___fldiv@f2+1,??___fldiv+1
  2904  000C28  C023  F027         	movff	___fldiv@f2+2,??___fldiv+2
  2905  000C2C  C024  F028         	movff	___fldiv@f2+3,??___fldiv+3
  2906  000C30  0E18               	movlw	24
  2907  000C32  D005               	goto	u430
  2908  000C34                     u435:
  2909  000C34  90D8               	bcf	status,0,c
  2910  000C36  3228               	rrcf	??___fldiv+3,f,c
  2911  000C38  3227               	rrcf	??___fldiv+2,f,c
  2912  000C3A  3226               	rrcf	??___fldiv+1,f,c
  2913  000C3C  3225               	rrcf	??___fldiv,f,c
  2914  000C3E                     u430:
  2915  000C3E  2EE8               	decfsz	wreg,f,c
  2916  000C40  D7F9               	goto	u435
  2917  000C42  5025               	movf	??___fldiv,w,c
  2918  000C44  6E2F               	movwf	___fldiv@sign,c
  2919  000C46  662F               	tstfsz	___fldiv@sign& (0+255),c
  2920  000C48  D009               	goto	l1195
  2921  000C4A  0E00               	movlw	0
  2922  000C4C  6E1D               	movwf	?___fldiv,c
  2923  000C4E  0E00               	movlw	0
  2924  000C50  6E1E               	movwf	?___fldiv+1,c
  2925  000C52  0E00               	movlw	0
  2926  000C54  6E1F               	movwf	?___fldiv+2,c
  2927  000C56  0E00               	movlw	0
  2928  000C58  6E20               	movwf	?___fldiv+3,c
  2929  000C5A  0012               	return	
  2930  000C5C                     l1195:
  2931  000C5C  502F               	movf	___fldiv@sign,w,c
  2932  000C5E  0F89               	addlw	137
  2933  000C60  5E2E               	subwf	___fldiv@exp,f,c
  2934  000C62  C020  F02F         	movff	___fldiv@f1+3,___fldiv@sign
  2935  000C66  5024               	movf	___fldiv@f2+3,w,c
  2936  000C68  1A2F               	xorwf	___fldiv@sign,f,c
  2937  000C6A  0E80               	movlw	128
  2938  000C6C  162F               	andwf	___fldiv@sign,f,c
  2939  000C6E  8E1F               	bsf	___fldiv@f1+2,7,c
  2940  000C70  0EFF               	movlw	255
  2941  000C72  161D               	andwf	___fldiv@f1,f,c
  2942  000C74  0EFF               	movlw	255
  2943  000C76  161E               	andwf	___fldiv@f1+1,f,c
  2944  000C78  0EFF               	movlw	255
  2945  000C7A  161F               	andwf	___fldiv@f1+2,f,c
  2946  000C7C  0E00               	movlw	0
  2947  000C7E  1620               	andwf	___fldiv@f1+3,f,c
  2948  000C80  8E23               	bsf	___fldiv@f2+2,7,c
  2949  000C82  0EFF               	movlw	255
  2950  000C84  1621               	andwf	___fldiv@f2,f,c
  2951  000C86  0EFF               	movlw	255
  2952  000C88  1622               	andwf	___fldiv@f2+1,f,c
  2953  000C8A  0EFF               	movlw	255
  2954  000C8C  1623               	andwf	___fldiv@f2+2,f,c
  2955  000C8E  0E00               	movlw	0
  2956  000C90  1624               	andwf	___fldiv@f2+3,f,c
  2957  000C92  0E20               	movlw	32
  2958  000C94  6E2D               	movwf	___fldiv@cntr,c
  2959  000C96                     l1207:
  2960  000C96  90D8               	bcf	status,0,c
  2961  000C98  3629               	rlcf	___fldiv@f3,f,c
  2962  000C9A  362A               	rlcf	___fldiv@f3+1,f,c
  2963  000C9C  362B               	rlcf	___fldiv@f3+2,f,c
  2964  000C9E  362C               	rlcf	___fldiv@f3+3,f,c
  2965  000CA0  5021               	movf	___fldiv@f2,w,c
  2966  000CA2  5C1D               	subwf	___fldiv@f1,w,c
  2967  000CA4  5022               	movf	___fldiv@f2+1,w,c
  2968  000CA6  581E               	subwfb	___fldiv@f1+1,w,c
  2969  000CA8  5023               	movf	___fldiv@f2+2,w,c
  2970  000CAA  581F               	subwfb	___fldiv@f1+2,w,c
  2971  000CAC  5024               	movf	___fldiv@f2+3,w,c
  2972  000CAE  5820               	subwfb	___fldiv@f1+3,w,c
  2973  000CB0  A0D8               	btfss	status,0,c
  2974  000CB2  D009               	goto	l1215
  2975  000CB4  5021               	movf	___fldiv@f2,w,c
  2976  000CB6  5E1D               	subwf	___fldiv@f1,f,c
  2977  000CB8  5022               	movf	___fldiv@f2+1,w,c
  2978  000CBA  5A1E               	subwfb	___fldiv@f1+1,f,c
  2979  000CBC  5023               	movf	___fldiv@f2+2,w,c
  2980  000CBE  5A1F               	subwfb	___fldiv@f1+2,f,c
  2981  000CC0  5024               	movf	___fldiv@f2+3,w,c
  2982  000CC2  5A20               	subwfb	___fldiv@f1+3,f,c
  2983  000CC4  8029               	bsf	___fldiv@f3,0,c
  2984  000CC6                     l1215:
  2985  000CC6  90D8               	bcf	status,0,c
  2986  000CC8  361D               	rlcf	___fldiv@f1,f,c
  2987  000CCA  361E               	rlcf	___fldiv@f1+1,f,c
  2988  000CCC  361F               	rlcf	___fldiv@f1+2,f,c
  2989  000CCE  3620               	rlcf	___fldiv@f1+3,f,c
  2990  000CD0  2E2D               	decfsz	___fldiv@cntr,f,c
  2991  000CD2  D7E1               	goto	l1207
  2992  000CD4  C029  F00F         	movff	___fldiv@f3,___flpack@arg
  2993  000CD8  C02A  F010         	movff	___fldiv@f3+1,___flpack@arg+1
  2994  000CDC  C02B  F011         	movff	___fldiv@f3+2,___flpack@arg+2
  2995  000CE0  C02C  F012         	movff	___fldiv@f3+3,___flpack@arg+3
  2996  000CE4  C02E  F013         	movff	___fldiv@exp,___flpack@exp
  2997  000CE8  C02F  F014         	movff	___fldiv@sign,___flpack@sign
  2998  000CEC  EC00  F007         	call	___flpack	;wreg free
  2999  000CF0  C00F  F01D         	movff	?___flpack,?___fldiv
  3000  000CF4  C010  F01E         	movff	?___flpack+1,?___fldiv+1
  3001  000CF8  C011  F01F         	movff	?___flpack+2,?___fldiv+2
  3002  000CFC  C012  F020         	movff	?___flpack+3,?___fldiv+3
  3003  000D00  0012               	return	
  3004  000D02                     __end_of___fldiv:
  3005                           	opt stack 0
  3006                           tblptru	equ	0xFF8
  3007                           tblptrh	equ	0xFF7
  3008                           tblptrl	equ	0xFF6
  3009                           tablat	equ	0xFF5
  3010                           prodl	equ	0xFF3
  3011                           intcon	equ	0xFF2
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function ___flpack *****************
  3017 ;; Defined at:
  3018 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\double.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  arg             4   14[COMRAM] unsigned long 
  3021 ;;  exp             1   18[COMRAM] unsigned char 
  3022 ;;  sign            1   19[COMRAM] unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  4   14[COMRAM] unsigned char 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3034 ;;      Params:         6       0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0
  3036 ;;      Temps:          4       0       0       0       0       0       0
  3037 ;;      Totals:        10       0       0       0       0       0       0
  3038 ;;Total ram usage:       10 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    1
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		___fldiv
  3045 ;;		___lwtofl
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text16
  3050  000E00                     __ptext16:
  3051                           	opt stack 0
  3052  000E00                     ___flpack:
  3053                           	opt stack 28
  3054                           
  3055                           ;incstack = 0
  3056  000E00  5013               	movf	___flpack@exp,w,c
  3057  000E02  B4D8               	btfsc	status,2,c
  3058  000E04  D006               	goto	l857
  3059  000E06  5012               	movf	___flpack@arg+3,w,c
  3060  000E08  100F               	iorwf	___flpack@arg,w,c
  3061  000E0A  1010               	iorwf	___flpack@arg+1,w,c
  3062  000E0C  1011               	iorwf	___flpack@arg+2,w,c
  3063  000E0E  A4D8               	btfss	status,2,c
  3064  000E10  D00F               	goto	l863
  3065  000E12                     l857:
  3066  000E12  0E00               	movlw	0
  3067  000E14  6E0F               	movwf	?___flpack,c
  3068  000E16  0E00               	movlw	0
  3069  000E18  6E10               	movwf	?___flpack+1,c
  3070  000E1A  0E00               	movlw	0
  3071  000E1C  6E11               	movwf	?___flpack+2,c
  3072  000E1E  0E00               	movlw	0
  3073  000E20  6E12               	movwf	?___flpack+3,c
  3074  000E22  0012               	return	
  3075  000E24                     l861:
  3076  000E24  2A13               	incf	___flpack@exp,f,c
  3077  000E26  90D8               	bcf	status,0,c
  3078  000E28  3212               	rrcf	___flpack@arg+3,f,c
  3079  000E2A  3211               	rrcf	___flpack@arg+2,f,c
  3080  000E2C  3210               	rrcf	___flpack@arg+1,f,c
  3081  000E2E  320F               	rrcf	___flpack@arg,f,c
  3082  000E30                     l863:
  3083  000E30  0E00               	movlw	0
  3084  000E32  140F               	andwf	___flpack@arg,w,c
  3085  000E34  6E15               	movwf	??___flpack& (0+255),c
  3086  000E36  0E00               	movlw	0
  3087  000E38  1410               	andwf	___flpack@arg+1,w,c
  3088  000E3A  6E16               	movwf	(??___flpack+1)& (0+255),c
  3089  000E3C  0E00               	movlw	0
  3090  000E3E  1411               	andwf	___flpack@arg+2,w,c
  3091  000E40  6E17               	movwf	(??___flpack+2)& (0+255),c
  3092  000E42  0EFE               	movlw	254
  3093  000E44  1412               	andwf	___flpack@arg+3,w,c
  3094  000E46  6E18               	movwf	(??___flpack+3)& (0+255),c
  3095  000E48  5018               	movf	??___flpack+3,w,c
  3096  000E4A  1015               	iorwf	??___flpack,w,c
  3097  000E4C  1016               	iorwf	??___flpack+1,w,c
  3098  000E4E  1017               	iorwf	??___flpack+2,w,c
  3099  000E50  B4D8               	btfsc	status,2,c
  3100  000E52  D00D               	goto	l432
  3101  000E54  D7E7               	goto	l861
  3102  000E56                     l865:
  3103  000E56  2A13               	incf	___flpack@exp,f,c
  3104  000E58  0E01               	movlw	1
  3105  000E5A  260F               	addwf	___flpack@arg,f,c
  3106  000E5C  0E00               	movlw	0
  3107  000E5E  2210               	addwfc	___flpack@arg+1,f,c
  3108  000E60  2211               	addwfc	___flpack@arg+2,f,c
  3109  000E62  2212               	addwfc	___flpack@arg+3,f,c
  3110  000E64  90D8               	bcf	status,0,c
  3111  000E66  3212               	rrcf	___flpack@arg+3,f,c
  3112  000E68  3211               	rrcf	___flpack@arg+2,f,c
  3113  000E6A  3210               	rrcf	___flpack@arg+1,f,c
  3114  000E6C  320F               	rrcf	___flpack@arg,f,c
  3115  000E6E                     l432:
  3116  000E6E  0E00               	movlw	0
  3117  000E70  140F               	andwf	___flpack@arg,w,c
  3118  000E72  6E15               	movwf	??___flpack& (0+255),c
  3119  000E74  0E00               	movlw	0
  3120  000E76  1410               	andwf	___flpack@arg+1,w,c
  3121  000E78  6E16               	movwf	(??___flpack+1)& (0+255),c
  3122  000E7A  0E00               	movlw	0
  3123  000E7C  1411               	andwf	___flpack@arg+2,w,c
  3124  000E7E  6E17               	movwf	(??___flpack+2)& (0+255),c
  3125  000E80  0EFF               	movlw	255
  3126  000E82  1412               	andwf	___flpack@arg+3,w,c
  3127  000E84  6E18               	movwf	(??___flpack+3)& (0+255),c
  3128  000E86  5018               	movf	??___flpack+3,w,c
  3129  000E88  1015               	iorwf	??___flpack,w,c
  3130  000E8A  1016               	iorwf	??___flpack+1,w,c
  3131  000E8C  1017               	iorwf	??___flpack+2,w,c
  3132  000E8E  B4D8               	btfsc	status,2,c
  3133  000E90  D007               	goto	l873
  3134  000E92  D7E1               	goto	l865
  3135  000E94                     l871:
  3136  000E94  0613               	decf	___flpack@exp,f,c
  3137  000E96  90D8               	bcf	status,0,c
  3138  000E98  360F               	rlcf	___flpack@arg,f,c
  3139  000E9A  3610               	rlcf	___flpack@arg+1,f,c
  3140  000E9C  3611               	rlcf	___flpack@arg+2,f,c
  3141  000E9E  3612               	rlcf	___flpack@arg+3,f,c
  3142  000EA0                     l873:
  3143  000EA0  AE11               	btfss	___flpack@arg+2,7,c
  3144  000EA2  D7F8               	goto	l871
  3145  000EA4  B013               	btfsc	___flpack@exp,0,c
  3146  000EA6  D008               	goto	l438
  3147  000EA8  0EFF               	movlw	255
  3148  000EAA  160F               	andwf	___flpack@arg,f,c
  3149  000EAC  0EFF               	movlw	255
  3150  000EAE  1610               	andwf	___flpack@arg+1,f,c
  3151  000EB0  0E7F               	movlw	127
  3152  000EB2  1611               	andwf	___flpack@arg+2,f,c
  3153  000EB4  0EFF               	movlw	255
  3154  000EB6  1612               	andwf	___flpack@arg+3,f,c
  3155  000EB8                     l438:
  3156  000EB8  90D8               	bcf	status,0,c
  3157  000EBA  3213               	rrcf	___flpack@exp,f,c
  3158  000EBC  C013  F015         	movff	___flpack@exp,??___flpack
  3159  000EC0  6A16               	clrf	(??___flpack+1)& (0+255),c
  3160  000EC2  6A17               	clrf	(??___flpack+2)& (0+255),c
  3161  000EC4  6A18               	clrf	(??___flpack+3)& (0+255),c
  3162  000EC6  C015  F018         	movff	??___flpack,??___flpack+3
  3163  000ECA  6A17               	clrf	??___flpack+2,c
  3164  000ECC  6A16               	clrf	??___flpack+1,c
  3165  000ECE  6A15               	clrf	??___flpack,c
  3166  000ED0  5015               	movf	??___flpack,w,c
  3167  000ED2  120F               	iorwf	___flpack@arg,f,c
  3168  000ED4  5016               	movf	??___flpack+1,w,c
  3169  000ED6  1210               	iorwf	___flpack@arg+1,f,c
  3170  000ED8  5017               	movf	??___flpack+2,w,c
  3171  000EDA  1211               	iorwf	___flpack@arg+2,f,c
  3172  000EDC  5018               	movf	??___flpack+3,w,c
  3173  000EDE  1212               	iorwf	___flpack@arg+3,f,c
  3174  000EE0  5014               	movf	___flpack@sign,w,c
  3175  000EE2  A4D8               	btfss	status,2,c
  3176  000EE4  8E12               	bsf	___flpack@arg+3,7,c
  3177  000EE6  C00F  F00F         	movff	___flpack@arg,?___flpack
  3178  000EEA  C010  F010         	movff	___flpack@arg+1,?___flpack+1
  3179  000EEE  C011  F011         	movff	___flpack@arg+2,?___flpack+2
  3180  000EF2  C012  F012         	movff	___flpack@arg+3,?___flpack+3
  3181  000EF6  0012               	return	
  3182  000EF8                     __end_of___flpack:
  3183                           	opt stack 0
  3184                           tblptru	equ	0xFF8
  3185                           tblptrh	equ	0xFF7
  3186                           tblptrl	equ	0xFF6
  3187                           tablat	equ	0xFF5
  3188                           prodl	equ	0xFF3
  3189                           intcon	equ	0xFF2
  3190                           postinc0	equ	0xFEE
  3191                           wreg	equ	0xFE8
  3192                           status	equ	0xFD8
  3193                           
  3194 ;; *************** function _AD_omv *****************
  3195 ;; Defined at:
  3196 ;;		line 253 in file "main.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  ADkanal         1    wreg     unsigned char 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  ADkanal         1   20[COMRAM] unsigned char 
  3201 ;;  AD_value        2   18[COMRAM] unsigned int 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2   14[COMRAM] int 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3211 ;;      Params:         2       0       0       0       0       0       0
  3212 ;;      Locals:         3       0       0       0       0       0       0
  3213 ;;      Temps:          2       0       0       0       0       0       0
  3214 ;;      Totals:         7       0       0       0       0       0       0
  3215 ;;Total ram usage:        7 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text17
  3226  0011C4                     __ptext17:
  3227                           	opt stack 0
  3228  0011C4                     _AD_omv:
  3229                           	opt stack 29
  3230                           
  3231                           ;incstack = 0
  3232                           ;AD_omv@ADkanal stored from wreg
  3233  0011C4  6E15               	movwf	AD_omv@ADkanal,c
  3234                           
  3235                           ;main.c: 255: unsigned int AD_value = 0;
  3236  0011C6  0E00               	movlw	0
  3237  0011C8  6E14               	movwf	AD_omv@AD_value+1,c
  3238  0011CA  0E00               	movlw	0
  3239  0011CC  6E13               	movwf	AD_omv@AD_value,c
  3240                           
  3241                           ;main.c: 256: ADCON0=(ADCON0 & 0b10000011)|(ADkanal<<2);
  3242  0011CE  C015  F011         	movff	AD_omv@ADkanal,??_AD_omv
  3243  0011D2  90D8               	bcf	status,0,c
  3244  0011D4  3611               	rlcf	??_AD_omv,f,c
  3245  0011D6  90D8               	bcf	status,0,c
  3246  0011D8  3611               	rlcf	??_AD_omv,f,c
  3247  0011DA  50C2               	movf	4034,w,c	;volatile
  3248  0011DC  0B83               	andlw	131
  3249  0011DE  1011               	iorwf	??_AD_omv,w,c
  3250  0011E0  6EC2               	movwf	4034,c	;volatile
  3251                           
  3252                           ;main.c: 257: _delay((unsigned long)((5)*(4000000/4000000.0)));
  3253  0011E2  F000               	nop	
  3254  0011E4  D000               	nop2		;2 cycle nop
  3255  0011E6  D000               	nop2		;2 cycle nop
  3256                           
  3257                           ;main.c: 258: ADCON0bits.GO=1;
  3258  0011E8  82C2               	bsf	4034,1,c	;volatile
  3259  0011EA                     l126:
  3260  0011EA  B2C2               	btfsc	4034,1,c	;volatile
  3261  0011EC  D7FE               	goto	l126
  3262                           
  3263                           ;main.c: 260: AD_value = ADRESL + (ADRESH<<8);
  3264  0011EE  50C4               	movf	4036,w,c	;volatile
  3265  0011F0  6E12               	movwf	(??_AD_omv+1)& (0+255),c
  3266  0011F2  6A11               	clrf	??_AD_omv& (0+255),c
  3267  0011F4  50C3               	movf	4035,w,c	;volatile
  3268  0011F6  2411               	addwf	??_AD_omv,w,c
  3269  0011F8  6E13               	movwf	AD_omv@AD_value,c
  3270  0011FA  0E00               	movlw	0
  3271  0011FC  2012               	addwfc	??_AD_omv+1,w,c
  3272  0011FE  6E14               	movwf	AD_omv@AD_value+1,c
  3273                           
  3274                           ;main.c: 261: return AD_value;
  3275  001200  C013  F00F         	movff	AD_omv@AD_value,?_AD_omv
  3276  001204  C014  F010         	movff	AD_omv@AD_value+1,?_AD_omv+1
  3277  001208  0012               	return	
  3278  00120A                     __end_of_AD_omv:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           prodl	equ	0xFF3
  3285                           intcon	equ	0xFF2
  3286                           postinc0	equ	0xFEE
  3287                           wreg	equ	0xFE8
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _isr *****************
  3291 ;; Defined at:
  3292 ;;		line 265 in file "main.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3306 ;;      Params:         0       0       0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0
  3308 ;;      Temps:         14       0       0       0       0       0       0
  3309 ;;      Totals:        14       0       0       0       0       0       0
  3310 ;;Total ram usage:       14 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		Interrupt level 2
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	intcode
  3320  000008                     __pintcode:
  3321                           	opt stack 0
  3322  000008                     _isr:
  3323                           	opt stack 27
  3324                           
  3325                           ;incstack = 0
  3326  000008  CFFA F001          	movff	pclath,??_isr
  3327  00000C  CFFB F002          	movff	pclatu,??_isr+1
  3328  000010  CFE9 F003          	movff	fsr0l,??_isr+2
  3329  000014  CFEA F004          	movff	fsr0h,??_isr+3
  3330  000018  CFE1 F005          	movff	fsr1l,??_isr+4
  3331  00001C  CFE2 F006          	movff	fsr1h,??_isr+5
  3332  000020  CFD9 F007          	movff	fsr2l,??_isr+6
  3333  000024  CFDA F008          	movff	fsr2h,??_isr+7
  3334  000028  CFF3 F009          	movff	prodl,??_isr+8
  3335  00002C  CFF4 F00A          	movff	prodh,??_isr+9
  3336  000030  CFF6 F00B          	movff	tblptrl,??_isr+10
  3337  000034  CFF7 F00C          	movff	tblptrh,??_isr+11
  3338  000038  CFF8 F00D          	movff	tblptru,??_isr+12
  3339  00003C  CFF5 F00E          	movff	tablat,??_isr+13
  3340                           
  3341                           ;main.c: 266: if(PIR1bits.TMR1IF && PIE1bits.TMR1IE){
  3342  000040  B09E               	btfsc	3998,0,c	;volatile
  3343  000042  A09D               	btfss	3997,0,c	;volatile
  3344  000044  D037               	goto	i2l137
  3345                           
  3346                           ;main.c: 267: TMR1H=0x3D;
  3347  000046  0E3D               	movlw	61
  3348  000048  6ECF               	movwf	4047,c	;volatile
  3349                           
  3350                           ;main.c: 268: TMR1L=0x1D;
  3351  00004A  0E1D               	movlw	29
  3352  00004C  6ECE               	movwf	4046,c	;volatile
  3353                           
  3354                           ;main.c: 269: if(++time_scaler>=20){
  3355  00004E  4A50               	infsnz	_time_scaler,f,c
  3356  000050  2A51               	incf	_time_scaler+1,f,c
  3357  000052  0E14               	movlw	20
  3358  000054  5C50               	subwf	_time_scaler& (0+255),w,c
  3359  000056  0E00               	movlw	0
  3360  000058  5851               	subwfb	(_time_scaler+1)& (0+255),w,c
  3361  00005A  A0D8               	btfss	status,0,c
  3362  00005C  D02A               	goto	i2l1449
  3363                           
  3364                           ;main.c: 270: time_scaler = 0;
  3365  00005E  0E00               	movlw	0
  3366  000060  6E51               	movwf	_time_scaler+1,c
  3367  000062  0E00               	movlw	0
  3368  000064  6E50               	movwf	_time_scaler,c
  3369                           
  3370                           ;main.c: 271: blink_battery = blink_battery + 1;
  3371  000066  2854               	incf	_blink_battery,w,c
  3372  000068  6E54               	movwf	_blink_battery,c
  3373                           
  3374                           ;main.c: 272: if(++sekunder>=60){
  3375  00006A  4A4E               	infsnz	_sekunder,f,c
  3376  00006C  2A4F               	incf	_sekunder+1,f,c
  3377  00006E  0E3C               	movlw	60
  3378  000070  5C4E               	subwf	_sekunder& (0+255),w,c
  3379  000072  0E00               	movlw	0
  3380  000074  584F               	subwfb	(_sekunder+1)& (0+255),w,c
  3381  000076  A0D8               	btfss	status,0,c
  3382  000078  D01C               	goto	i2l1449
  3383                           
  3384                           ;main.c: 273: sekunder = 0;
  3385  00007A  0E00               	movlw	0
  3386  00007C  6E4F               	movwf	_sekunder+1,c
  3387  00007E  0E00               	movlw	0
  3388  000080  6E4E               	movwf	_sekunder,c
  3389                           
  3390                           ;main.c: 274: if(++minuter>=60){
  3391  000082  4A4C               	infsnz	_minuter,f,c
  3392  000084  2A4D               	incf	_minuter+1,f,c
  3393  000086  0E3C               	movlw	60
  3394  000088  5C4C               	subwf	_minuter& (0+255),w,c
  3395  00008A  0E00               	movlw	0
  3396  00008C  584D               	subwfb	(_minuter+1)& (0+255),w,c
  3397  00008E  A0D8               	btfss	status,0,c
  3398  000090  D010               	goto	i2l1449
  3399                           
  3400                           ;main.c: 275: minuter=0;
  3401  000092  0E00               	movlw	0
  3402  000094  6E4D               	movwf	_minuter+1,c
  3403  000096  0E00               	movlw	0
  3404  000098  6E4C               	movwf	_minuter,c
  3405                           
  3406                           ;main.c: 276: if(++timmar>=24)
  3407  00009A  4A52               	infsnz	_timmar,f,c
  3408  00009C  2A53               	incf	_timmar+1,f,c
  3409  00009E  0E18               	movlw	24
  3410  0000A0  5C52               	subwf	_timmar& (0+255),w,c
  3411  0000A2  0E00               	movlw	0
  3412  0000A4  5853               	subwfb	(_timmar+1)& (0+255),w,c
  3413  0000A6  A0D8               	btfss	status,0,c
  3414  0000A8  D004               	goto	i2l1449
  3415                           
  3416                           ;main.c: 277: timmar=0;
  3417  0000AA  0E00               	movlw	0
  3418  0000AC  6E53               	movwf	_timmar+1,c
  3419  0000AE  0E00               	movlw	0
  3420  0000B0  6E52               	movwf	_timmar,c
  3421  0000B2                     i2l1449:
  3422                           
  3423                           ;main.c: 278: }
  3424                           ;main.c: 279: }
  3425                           ;main.c: 280: }
  3426                           ;main.c: 281: PIR1bits.TMR1IF = 0;
  3427  0000B2  909E               	bcf	3998,0,c	;volatile
  3428  0000B4                     i2l137:
  3429  0000B4  C00E  FFF5         	movff	??_isr+13,tablat
  3430  0000B8  C00D  FFF8         	movff	??_isr+12,tblptru
  3431  0000BC  C00C  FFF7         	movff	??_isr+11,tblptrh
  3432  0000C0  C00B  FFF6         	movff	??_isr+10,tblptrl
  3433  0000C4  C00A  FFF4         	movff	??_isr+9,prodh
  3434  0000C8  C009  FFF3         	movff	??_isr+8,prodl
  3435  0000CC  C008  FFDA         	movff	??_isr+7,fsr2h
  3436  0000D0  C007  FFD9         	movff	??_isr+6,fsr2l
  3437  0000D4  C006  FFE2         	movff	??_isr+5,fsr1h
  3438  0000D8  C005  FFE1         	movff	??_isr+4,fsr1l
  3439  0000DC  C004  FFEA         	movff	??_isr+3,fsr0h
  3440  0000E0  C003  FFE9         	movff	??_isr+2,fsr0l
  3441  0000E4  C002  FFFB         	movff	??_isr+1,pclatu
  3442  0000E8  C001  FFFA         	movff	??_isr,pclath
  3443  0000EC  0011               	retfie		f
  3444  0000EE                     __end_of_isr:
  3445                           	opt stack 0
  3446                           pclatu	equ	0xFFB
  3447                           pclath	equ	0xFFA
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           prodh	equ	0xFF4
  3453                           prodl	equ	0xFF3
  3454                           intcon	equ	0xFF2
  3455                           postinc0	equ	0xFEE
  3456                           fsr0h	equ	0xFEA
  3457                           fsr0l	equ	0xFE9
  3458                           wreg	equ	0xFE8
  3459                           fsr1h	equ	0xFE2
  3460                           fsr1l	equ	0xFE1
  3461                           fsr2h	equ	0xFDA
  3462                           fsr2l	equ	0xFD9
  3463                           status	equ	0xFD8
  3464                           pclatu	equ	0xFFB
  3465                           pclath	equ	0xFFA
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           prodh	equ	0xFF4
  3471                           prodl	equ	0xFF3
  3472                           intcon	equ	0xFF2
  3473                           postinc0	equ	0xFEE
  3474                           fsr0h	equ	0xFEA
  3475                           fsr0l	equ	0xFE9
  3476                           wreg	equ	0xFE8
  3477                           fsr1h	equ	0xFE2
  3478                           fsr1l	equ	0xFE1
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483                           	psect	rparam
  3484  0000                     pclatu	equ	0xFFB
  3485                           pclath	equ	0xFFA
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           prodh	equ	0xFF4
  3491                           prodl	equ	0xFF3
  3492                           intcon	equ	0xFF2
  3493                           postinc0	equ	0xFEE
  3494                           fsr0h	equ	0xFEA
  3495                           fsr0l	equ	0xFE9
  3496                           wreg	equ	0xFE8
  3497                           fsr1h	equ	0xFE2
  3498                           fsr1l	equ	0xFE1
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     75      84
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_writesc@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _printTime->___awdiv
    _lcd_init->_lcd_writesc
    _lcd_writesc->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_cmd->_lcd_write
    _lcd_clear->_lcd_write
    _create_char->_lcd_char
    _lcd_char->_lcd_write
    ___lwtofl->___flpack
    ___fltol->___fldiv
    ___fldiv->___lwtofl

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    8294
                                             57 COMRAM    18    18      0
                             _AD_omv
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___fltol
                           ___lwtofl
                        _create_char
                               _init
                           _lcd_goto
                           _lcd_init
                          _lcd_write
                        _lcd_writesc
                          _printTime
 ---------------------------------------------------------------------------------
 (1) _printTime                                           13    11      2    1457
                                             22 COMRAM    13    11      2
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     453
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     453
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     918
                                             17 COMRAM     1     1      0
                          _lcd_clear
                            _lcd_cmd
                           _lcd_goto
                          _lcd_write
                        _lcd_writesc
 ---------------------------------------------------------------------------------
 (1) _lcd_writesc                                          2     0      2     408
                                             15 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             1     1      0     135
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     135
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     120
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _create_char                                          8     8      0     435
                                             16 COMRAM     8     8      0
                           _lcd_char
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             1     1      0     135
                                             15 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     120
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwtofl                                             4     0      4    1439
                                             24 COMRAM     4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     236
                                             47 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             19    11      8    1760
                                             28 COMRAM    19    11      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flpack                                            10     4      6    1338
                                             14 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _AD_omv                                               7     5      2      30
                                             14 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_omv
   ___awdiv
   ___awmod
   ___fldiv
     ___flpack
     ___lwtofl (ARG)
       ___flpack
   ___fltol
     ___fldiv (ARG)
       ___flpack
       ___lwtofl (ARG)
         ___flpack
     ___lwtofl (ARG)
       ___flpack
   ___lwtofl
     ___flpack
   _create_char
     _lcd_char
       _lcd_write
     _lcd_write
   _init
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_clear
       _lcd_write
     _lcd_cmd
       _lcd_write
     _lcd_goto
       _lcd_write
     _lcd_write
     _lcd_writesc
       _lcd_write
   _lcd_write
   _lcd_writesc
     _lcd_write
   _printTime
     ___awdiv
     ___awmod
     _lcd_goto
       _lcd_write
     _lcd_write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4B      54       1       88.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54       9        0.0%
DATA                 0      0      54      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Sep 27 16:48:06 2017

           create_char@i 0011             ___fldiv@cntr 002D             ___fldiv@sign 002F  
                     l91 06D2             ___awdiv@sign 0014             ?_lcd_writesc 0010  
           ___flpack@arg 000F             ___flpack@exp 0013                      l126 11EA  
                    l143 0B02                      l160 1118                      l145 0B18  
                    l170 1150                      l162 1122                      l146 0B2E  
                    l172 115A                      l164 112C           lcd_cmd@command 0010  
                    l173 115C                      l165 112E                      l166 113C  
                    l158 110E                      l432 0E6E                      l168 1146  
                    l438 0EB8                      l813 1152                      l805 113E  
                    l831 1220                      l809 1148                      l905 102A  
                    l921 105C                      l827 120C                      l907 1032  
                    l861 0E24                      l925 106A                      l917 1052  
                    l909 1036                      l941 10B4                      l871 0E94  
                    l863 0E30                      l873 0EA0                      l865 0E56  
                    l857 0E12                      l793 111A                      l961 10FA  
                    l953 10E2                      l945 10C2                      l937 1098  
                    l947 10CA                      l797 1124                      l789 1110  
                    l893 0FF4                      l949 10CE                      l957 10EC  
                    l899 1014                      u410 0C02                      u430 0C3E  
                    _PR2 000FBB                      u415 0BF8                      u435 0C34  
                    u460 0D20                      u480 0D5C                      u465 0D16  
                    u485 0D52                      u807 0F02                      u817 0F1E  
                    u827 0F32                      u837 0F46                      u847 0F5C  
                    u857 126E                      u867 1164                      _isr 0008  
           ___awmod@sign 0014              lcd_goto@pos 0010                      wreg 000FE8  
           __CFG_FOSC$XT 000000              main@act_Val 0049             printTime@var 0022  
           __CFG_LVP$OFF 000000            ___flpack@sign 0014             ___fltol@exp1 0039  
                   l1103 0A58                     l1215 0CC6                     l1207 0C96  
                   l1073 09F4                     l1057 09BC                     l1401 0904  
                   l1321 06EE                     l1245 0DA0                     l1229 0D3E  
                   l1157 0B46                     l1333 0770                     l1263 0DEE  
                   l1255 0DC8                     l1087 0A20                     l1175 0BDE  
                   l1159 0B6A                     l1423 0976                     l1319 06E6  
                   l1257 0DD4                     l1249 0DB0                     l1169 0B9A  
                   l1417 0958                     l1409 092C                     l1195 0C5C  
                   l1259 0DD8                     l1347 07CA                     l1189 0C20  
                   l1373 08A6                     l1285 0648                     l1359 084C  
                   l1393 08DC                     l1387 08CC                     ?_isr 0001  
                   STR_1 0610                     STR_2 0610                     STR_3 0610  
                   STR_4 0610                     STR_5 0612                     STR_6 0601  
                   _IPR1 000F9F                     _PIE1 000F9D              main@set_Val 0048  
                   _main 0624              main@tid_old 0046                     _init 116C  
            main@pot_Val 0044                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 00EE            __CFG_IESO$OFF 000000  
       create_char@i_611 0013         create_char@i_612 0015         create_char@i_613 0017  
          printTime@pos1 001C            printTime@pos2 001E                    ??_isr 0001  
          ___fltol@sign1 0038                    ?_main 0001                    ?_init 0001  
        __end_of___fldiv 0D02          __end_of___awdiv 1074          __end_of___awmod 1104  
        __end_of___fltol 0E00          ___awdiv@divisor 0011                    _T1CON 000FCD  
                  _T2CON 000FBA           __CFG_DEBUG$OFF 000000                    i2l137 00B4  
        ___awdiv@counter 0013                    _TMR1H 000FCF                    _TMR1L 000FCE  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
           main@duty_LSB 0042             main@duty_MSB 0041           __CFG_FCMEN$OFF 000000  
        __end_of_lcd_cmd 12BC       __CFG_MCLRE$EXTMCLR 000000           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8             lcd_writesc@s 0010  
        __initialization 1278             __end_of_main 0986             __end_of_init 11C4  
                 ??_main 003A                   ??_init 000F            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3         __end_of___flpack 0EF8  
                 _CCPR5L 000F55         ___awdiv@dividend 000F                   _ANSELA 000F38  
                 _ANSELB 000F39                   _ANSELC 000F3A                   _AD_omv 11C4  
                 i2l1449 00B2           __CFG_WDTEN$OFF 000000                   _INTCON 000FF2  
       __end_of___lwtofl 125E     __size_of_create_char 0140           __CFG_PWRTEN$ON 000000  
         __CFG_XINST$OFF 000000         __end_of_lcd_char 12AE         __end_of_lcd_init 0FD0  
       __end_of_lcd_goto 129E                ??___fldiv 0025                ??___awdiv 0013  
         __CFG_STVREN$ON 000000                ??___awmod 0013                ??___fltol 0034  
                 clear_0 127E         ___awdiv@quotient 0015          ___awmod@divisor 0011  
                 _timmar 0052          ___awmod@counter 0013            AD_omv@ADkanal 0015  
              ??_lcd_cmd 0010     __size_of_lcd_writesc 002A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      printTime@sekunder 001B          __CFG_HFOFST$OFF 000000               ___fldiv@f1 001D  
             ___fldiv@f2 0021               ___fldiv@f3 0029               __accesstop 0060  
__end_of__initialization 1284               ___fltol@f1 0030           __pcstackCOMRAM 0001  
             ___lwtofl@c 0019       __size_of_lcd_clear 001A       __size_of_lcd_write 0068  
        printTime@timmar 0018                  ?_AD_omv 000F          __CFG_PLLCFG$OFF 000000  
                _CCP5CON 000F54                ?___flpack 000F                ?___lwtofl 0019  
     __size_of_printTime 011E                ?_lcd_char 0001                ?_lcd_init 0001  
              ?_lcd_goto 0001          __size_of_AD_omv 0046                  __Hparam 0000  
                __Lparam 0000        __end_of_lcd_clear 1278                  ___fldiv 0BE4  
                ___awdiv 0FD0                  ___awmod 1074                  ___fltol 0D02  
      __end_of_lcd_write 116C             __psmallconst 0600               ??___flpack 0015  
                __pcinit 1278                  __ramtop 0600                  __ptext0 0624  
                __ptext1 0AC6                  __ptext2 1074                  __ptext3 0FD0  
                __ptext4 0EF8                  __ptext5 120A                  __ptext6 128E  
                __ptext7 12AE                  __ptext8 125E                  __ptext9 116C  
                _lcd_cmd 12AE               ??___lwtofl 001D             __size_of_isr 00E6  
       ___awmod@dividend 000F                  _minuter 004C           AD_omv@AD_value 0013  
             ??_lcd_char 0010                  main@tid 004A               ??_lcd_init 0012  
             ??_lcd_goto 0010           main@sensor_Val 003F     end_of_initialization 1284  
     lcd_char@cgram_addr 0010            __Lmediumconst 0000        __end_of_printTime 0BE4  
                postinc0 000FEE                _PORTBbits 000F81                _PORTCbits 000F82  
              _TRISAbits 000F92              ___fldiv@exp 002E            ??_create_char 0011  
         __end_of_AD_omv 120A               lcd_write@c 000F            ??_lcd_writesc 0012  
     main@character_code 003E      start_initialization 1278              __end_of_isr 00EE  
               ??_AD_omv 0011       main@rampknapp_flag 0043      __end_of_create_char 0AC6  
       printTime@minuter 0017        __size_of___flpack 00F8              __pbssCOMRAM 004C  
      __size_of___lwtofl 002A      __end_of_lcd_writesc 1234      __end_of__stringdata 0623  
      __size_of_lcd_char 0010        __size_of_lcd_init 00D8        __size_of_lcd_goto 0010  
              __pintcode 0008                 ?___fldiv 001D                 ?___awdiv 000F  
               ?___awmod 000F                 ?___fltol 0030                _lcd_clear 125E  
       __CFG_PRICLKEN$ON 000000                 ?_lcd_cmd 0001                _lcd_write 1104  
            __smallconst 0600                 _CCPTMRS1 000F48              _create_char 0986  
               _LATBbits 000F8A                 _LATCbits 000F8B                 _PIE1bits 000F9D  
               _PIR1bits 000F9E            _blink_battery 0054                _printTime 0AC6  
             ?_lcd_clear 0001              _lcd_writesc 120A               _ADCON0bits 000FC2  
            __stringdata 0601               ?_lcd_write 0001               printTime@i 0020  
               __Hrparam 0000                 __Lrparam 0000               ?_printTime 0017  
       __size_of___fldiv 011E         __size_of___awdiv 00A4         __size_of___awmod 0090  
       __size_of___fltol 00FE                 ___flpack 0E00                 ___lwtofl 1234  
       __size_of_lcd_cmd 000E                 __ptext10 0986                 __ptext11 129E  
               __ptext12 1104                 __ptext13 1234                 __ptext14 0D02  
               __ptext15 0BE4                 __ptext16 0E00                 __ptext17 11C4  
               _lcd_char 129E                 _lcd_init 0EF8                 _lcd_goto 128E  
          __size_of_main 0362            __size_of_init 0058                 _sekunder 004E  
            ??_lcd_clear 0010              ??_lcd_write 000F                 intlevel2 0000  
            ??_printTime 0019              _time_scaler 0050             ?_create_char 0001  
